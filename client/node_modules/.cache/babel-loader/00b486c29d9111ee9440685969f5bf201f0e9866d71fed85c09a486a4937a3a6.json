{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\redux\\\\Lover-Flower\\\\client\\\\src\\\\features\\\\SortByProps\\\\SortByProps.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { pushParam, popParam } from '../../redux/slices/Params';\nimport { update } from '../../redux/slices/Products';\nimport styles from './styles/SortByProps.module.scss';\nimport getCurrentProducts from './api/getProducts.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortByProps = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const sendProps = () => {};\n  const filters = [{\n    ttl: 'ПО СВЕТУ',\n    name: 'light',\n    variants: ['нежные', 'яркие']\n  }, {\n    ttl: 'ПО ЦВЕТУ',\n    name: 'cost',\n    variants: ['белый', 'желтый', 'зеленый', 'красный', 'оранжевый', 'розовый', 'синий']\n  }, {\n    ttl: 'ПО ФОРМАТУ',\n    name: 'format',\n    variants: ['букет', 'в вазе', 'в конверте', 'в корзине', 'в шляпной коробке', 'в ящике']\n  }, {\n    ttl: 'СТОИМОСТЬ',\n    name: 'Cost',\n    variants: ['нежные', 'нежные']\n  }, {\n    ttl: 'ПО ЦВЕТКУ',\n    name: 'flowers',\n    variants: ['Альстромерия', 'Астильба', 'Альстромерия', 'Астильба', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Альстромерия']\n  }];\n\n  // Redux state\n  const types = useSelector(state => state.prodTypes);\n  const sortBy = useSelector(state => state.sortby);\n  const props = useSelector(state => state.Params);\n  React.useEffect(() => {\n    const obj = {\n      types,\n      sortBy,\n      props\n    };\n    console.log(obj);\n\n    // Make request\n    try {\n      getCurrentProducts(obj).then(res => {\n        dispatch(update(res));\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n  const updateParams = event => {\n    var _event$currentTarget$, _event$currentTarget$2, _event$currentTarget$3;\n    event === null || event === void 0 ? void 0 : (_event$currentTarget$ = event.currentTarget.previousElementSibling) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.classList.toggle(styles.active);\n\n    // take targetElem props\n    const name = event === null || event === void 0 ? void 0 : event.currentTarget.name;\n    const inputValue = event === null || event === void 0 ? void 0 : (_event$currentTarget$2 = event.currentTarget.nextElementSibling) === null || _event$currentTarget$2 === void 0 ? void 0 : _event$currentTarget$2.innerHTML;\n\n    // UPD State for Params\n    if (event !== null && event !== void 0 && (_event$currentTarget$3 = event.currentTarget.previousElementSibling) !== null && _event$currentTarget$3 !== void 0 && _event$currentTarget$3.classList.contains(styles.active)) {\n      dispatch(pushParam({\n        [name]: inputValue\n      }));\n    } else {\n      dispatch(popParam({\n        [name]: inputValue\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.block,\n    onSubmit: handleSubmit(sendProps),\n    children: filters.map(topic => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.title,\n          children: topic.ttl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputs,\n          children: topic.variants.map(vari => {\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.label,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.fakeCheckbox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: styles.checkbox,\n                type: 'checkbox',\n                ...register(`${topic.name}`, {\n                  onChange: updateParams\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.inputText,\n                children: vari\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(SortByProps, \"Di2HnoOkIFx7nnlmzZrs/V74kKY=\", false, function () {\n  return [useDispatch, useForm, useSelector, useSelector, useSelector];\n});\n_c = SortByProps;\nexport default SortByProps;\nvar _c;\n$RefreshReg$(_c, \"SortByProps\");","map":{"version":3,"names":["React","useForm","useDispatch","useSelector","pushParam","popParam","update","styles","getCurrentProducts","jsxDEV","_jsxDEV","SortByProps","_s","dispatch","register","handleSubmit","sendProps","filters","ttl","name","variants","types","state","prodTypes","sortBy","sortby","props","Params","useEffect","obj","console","log","then","res","err","error","updateParams","event","_event$currentTarget$","_event$currentTarget$2","_event$currentTarget$3","currentTarget","previousElementSibling","classList","toggle","active","inputValue","nextElementSibling","innerHTML","contains","className","block","onSubmit","children","map","topic","title","fileName","_jsxFileName","lineNumber","columnNumber","inputs","vari","label","fakeCheckbox","checkbox","type","onChange","inputText","_c","$RefreshReg$"],"sources":["D:/Рабочий стол/redux/Lover-Flower/client/src/features/SortByProps/SortByProps.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pushParam, popParam } from '../../redux/slices/Params';\r\nimport { update } from '../../redux/slices/Products';\r\nimport styles from './styles/SortByProps.module.scss';\r\nimport getCurrentProducts from './api/getProducts.js';\r\n\r\nconst SortByProps = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm()\r\n\r\n    const sendProps = () => {};\r\n\r\n    const filters = [\r\n        {ttl: 'ПО СВЕТУ', name: 'light', variants: ['нежные', 'яркие']},\r\n        {ttl: 'ПО ЦВЕТУ', name: 'cost', variants: ['белый', 'желтый', 'зеленый', 'красный', 'оранжевый', 'розовый', 'синий']},\r\n        {ttl: 'ПО ФОРМАТУ', name: 'format', variants: ['букет', 'в вазе', 'в конверте', 'в корзине', 'в шляпной коробке', 'в ящике']},\r\n        {ttl: 'СТОИМОСТЬ', name: 'Cost', variants: ['нежные', 'нежные']},\r\n        {ttl: 'ПО ЦВЕТКУ', name: 'flowers', variants: ['Альстромерия', 'Астильба', 'Альстромерия', 'Астильба', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Альстромерия']},\r\n    ]\r\n\r\n    // Redux state\r\n    const types = useSelector((state: any) => state.prodTypes);\r\n    const sortBy = useSelector((state: any) => state.sortby);\r\n    const props = useSelector((state: any) => state.Params);\r\n\r\n    React.useEffect(() => {\r\n        const obj = { types, sortBy, props };\r\n\r\n        console.log(obj);\r\n\r\n        // Make request\r\n        try {\r\n            getCurrentProducts(obj)\r\n            .then((res: any) => {\r\n                dispatch(update(res));\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }, [])\r\n    \r\n    const updateParams = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event?.currentTarget.previousElementSibling?.classList.toggle(styles.active);\r\n\r\n        // take targetElem props\r\n        const name = event?.currentTarget.name;\r\n        const inputValue = event?.currentTarget.nextElementSibling?.innerHTML;\r\n        \r\n        // UPD State for Params\r\n        if (event?.currentTarget.previousElementSibling?.classList.contains(styles.active)) {\r\n            dispatch(pushParam({[name]: inputValue}))\r\n        } else {\r\n            dispatch(popParam({[name]: inputValue}))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className={styles.block} onSubmit={handleSubmit(sendProps)}>\r\n        {filters.map(topic => {\r\n            return (\r\n                <div className=\"\">\r\n                    <h2 className={styles.title}>{topic.ttl}</h2>\r\n                    <div className={styles.inputs}>\r\n                        {topic.variants.map((vari) => {\r\n                            return (\r\n                                <label className={styles.label}>\r\n                                    <div className={styles.fakeCheckbox}></div>\r\n                                    <input className={styles.checkbox} type={'checkbox'} {...register(`${topic.name}`, { onChange: updateParams })}/>\r\n                                    <span className={styles.inputText}>{vari}</span>\r\n                                </label>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SortByProps;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}