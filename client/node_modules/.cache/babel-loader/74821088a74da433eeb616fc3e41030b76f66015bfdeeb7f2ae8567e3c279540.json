{"ast":null,"code":"import React from'react';import styles from'./styles/FlowerType.module.scss';import{pushType,popType}from'../../redux/slices/ProductTypes';import{useDispatch,useSelector}from'react-redux';import{update}from'../../redux/slices/Products';import getCurrentProducts from'./api/getRequest.ts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TypeOfFlower=function TypeOfFlower(){var dispatch=useDispatch();var buttons=['Букеты из гипсофил','Букеты из ромашек','Букеты из хризантем','Комнатные цветы в горшках','Монобукеты','Сборные букеты','Букет на праздник','Композиции из цветов','Конверты','Открытки','Подарки','Букеты из сухоцветов','Шары','Популярное','Букеты роз','Цветы на похороны','Упаковка подарков'];var types=useSelector(function(state){return state.prodTypes;});var sortBy=useSelector(function(state){return state.sortby;});var props=useSelector(function(state){return state.Params;});React.useEffect(function(){var obj={types:types,sortBy:sortBy,props:props};try{getCurrentProducts(obj).then(function(res){dispatch(update(res));});}catch(err){console.error(err);};},[types]);function updateStore(event){event===null||event===void 0?void 0:event.currentTarget.classList.toggle(styles.active);var type=event===null||event===void 0?void 0:event.currentTarget.innerText;if(event!==null&&event!==void 0&&event.currentTarget.classList.contains(\"\".concat(styles.active))){dispatch(pushType(type));}else{dispatch(popType(type));};};return/*#__PURE__*/_jsxs(\"div\",{className:styles.block,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.ttl,children:\"\\u043A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"\".concat(styles.ttl,\" \").concat(styles.ttlSecond),children:\"\\u0431\\u0443\\u043A\\u0435\\u0442\\u043E\\u0432\"}),/*#__PURE__*/_jsx(\"p\",{className:styles.paragraph,children:\"\\u0412 \\u043D\\u0430\\u0448\\u0435\\u043C \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u0435 \\u0441\\u0430\\u043C\\u044B\\u0439 \\u0431\\u043E\\u043B\\u044C\\u0448\\u043E\\u0439 \\u0432\\u044B\\u0431\\u043E\\u0440 \\u0431\\u0443\\u043A\\u0435\\u0442\\u043E\\u0432 \\u0434\\u043B\\u044F \\u043B\\u044E\\u0431\\u044B\\u0445 \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u0439:\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.topics,children:buttons.map(function(string){return/*#__PURE__*/_jsx(\"button\",{className:styles.topic,onClick:updateStore,children:string});})})]});};export default TypeOfFlower;","map":{"version":3,"names":["React","styles","pushType","popType","useDispatch","useSelector","update","getCurrentProducts","jsx","_jsx","jsxs","_jsxs","TypeOfFlower","dispatch","buttons","types","state","prodTypes","sortBy","sortby","props","Params","useEffect","obj","then","res","err","console","error","updateStore","event","currentTarget","classList","toggle","active","type","innerText","contains","concat","className","block","children","ttl","ttlSecond","paragraph","topics","map","string","topic","onClick"],"sources":["D:/Рабочий стол/redux/Lover-Flower/client/src/features/TypeOfFlower/TypeOfFlower.tsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './styles/FlowerType.module.scss';\r\nimport getProducts from './api/getRequest.ts';\r\n\r\nimport { pushType, popType } from '../../redux/slices/ProductTypes';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { update } from '../../redux/slices/Products';\r\nimport getCurrentProducts from './api/getRequest.ts';\r\n\r\nconst TypeOfFlower = () => {\r\n    const dispatch = useDispatch();\r\n    const buttons: string[] = [\r\n        'Букеты из гипсофил', 'Букеты из ромашек', 'Букеты из хризантем','Комнатные цветы в горшках','Монобукеты','Сборные букеты','Букет на праздник',\r\n        'Композиции из цветов','Конверты','Открытки','Подарки','Букеты из сухоцветов','Шары','Популярное','Букеты роз','Цветы на похороны','Упаковка подарков',\r\n    ];\r\n\r\n    const types = useSelector((state: any) => state.prodTypes);\r\n    const sortBy = useSelector((state: any) => state.sortby);\r\n    const props = useSelector((state: any) => state.Params);\r\n\r\n    React.useEffect(() => {\r\n        const obj = { types, sortBy, props };\r\n\r\n        try {\r\n            getCurrentProducts(obj)\r\n            .then((res: any) => {\r\n                dispatch(update(res));\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n        };\r\n    }, [types]);\r\n    \r\n    function updateStore(event: React.MouseEvent<HTMLButtonElement>) {\r\n        event?.currentTarget.classList.toggle(styles.active);\r\n        const type = event?.currentTarget.innerText;\r\n        \r\n        if (event?.currentTarget.classList.contains(`${styles.active}`)) {\r\n            dispatch(pushType(type));\r\n        } else {\r\n            dispatch(popType(type));\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={styles.block}>\r\n            <h2 className={styles.ttl}>каталог</h2>\r\n            <h2 className={`${styles.ttl} ${styles.ttlSecond}`}>букетов</h2>\r\n            <p className={styles.paragraph}>\r\n                В нашем магазине самый большой выбор букетов для любых событий:\r\n            </p>\r\n            <div className={styles.topics}>\r\n                {buttons.map(string => {\r\n                    return (\r\n                        <button className={styles.topic} onClick={updateStore}>\r\n                            {string}\r\n                        </button>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypeOfFlower;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}