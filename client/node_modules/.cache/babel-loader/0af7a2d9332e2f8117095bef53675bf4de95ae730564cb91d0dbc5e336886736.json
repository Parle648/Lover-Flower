{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\redux\\\\Lover-Flower\\\\client\\\\src\\\\features\\\\SortByProps\\\\SortByProps.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { pushParam, popParam } from '../../redux/slices/Params';\nimport styles from './styles/SortByProps.module.scss';\nimport { getCurrentProducts } from './api/getProducts.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortByProps = () => {\n  _s();\n  const dispatch = useDispatch();\n  const filters = [{\n    ttl: 'ПО СВЕТУ',\n    name: 'light',\n    variants: ['нежные', 'яркие']\n  }, {\n    ttl: 'ПО ЦВЕТУ',\n    name: 'cost',\n    variants: ['белый', 'желтый', 'зеленый', 'красный', 'оранжевый', 'розовый', 'синий']\n  }, {\n    ttl: 'ПО ФОРМАТУ',\n    name: 'format',\n    variants: ['букет', 'в вазе', 'в конверте', 'в корзине', 'в шляпной коробке', 'в ящике']\n  }, {\n    ttl: 'СТОИМОСТЬ',\n    name: 'Cost',\n    variants: ['нежные', 'нежные']\n  }, {\n    ttl: 'ПО ЦВЕТКУ',\n    name: 'flowers',\n    variants: ['Альстромерия', 'Астильба', 'Альстромерия', 'Астильба', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Альстромерия']\n  }];\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const sendProps = () => {};\n  const types = useSelector(state => state.prodTypes);\n  const sortBy = useSelector(state => state.sortBy);\n  const props = useSelector(state => state.Params);\n  const changeHandler = event => {\n    var _event$currentTarget$, _event$currentTarget$2;\n    event === null || event === void 0 ? void 0 : (_event$currentTarget$ = event.currentTarget.previousElementSibling) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.classList.toggle(styles.active);\n    const name = event === null || event === void 0 ? void 0 : event.currentTarget.name;\n    if (!(event !== null && event !== void 0 && (_event$currentTarget$2 = event.currentTarget.previousElementSibling) !== null && _event$currentTarget$2 !== void 0 && _event$currentTarget$2.classList.contains(styles.active))) {\n      var _event$currentTarget$3;\n      dispatch(popParam({\n        [name]: event === null || event === void 0 ? void 0 : (_event$currentTarget$3 = event.currentTarget.nextElementSibling) === null || _event$currentTarget$3 === void 0 ? void 0 : _event$currentTarget$3.innerHTML\n      }));\n    } else {\n      var _event$currentTarget$4;\n      dispatch(pushParam({\n        [name]: `${event === null || event === void 0 ? void 0 : (_event$currentTarget$4 = event.currentTarget.nextElementSibling) === null || _event$currentTarget$4 === void 0 ? void 0 : _event$currentTarget$4.innerHTML}`\n      }));\n    }\n    const responce = getCurrentProducts(types, sortBy, props);\n    responce.then(res => {\n      console.log(\"Значение из промиса:\", res);\n    }).catch(err => {\n      console.error(\"Ошибка:\", err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.block,\n    onSubmit: handleSubmit(sendProps),\n    children: filters.map(topic => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.title,\n          children: topic.ttl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputs,\n          children: topic.variants.map(vari => {\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.label,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.fakeCheckbox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: styles.checkbox,\n                type: 'checkbox',\n                ...register(`${topic.name}`, {\n                  onChange: changeHandler\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.inputText,\n                children: vari\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(SortByProps, \"M4YCaDOA0djcetV8a9KGr1r6eCs=\", false, function () {\n  return [useDispatch, useForm, useSelector, useSelector, useSelector];\n});\n_c = SortByProps;\nexport default SortByProps;\nvar _c;\n$RefreshReg$(_c, \"SortByProps\");","map":{"version":3,"names":["React","useForm","useDispatch","useSelector","pushParam","popParam","styles","getCurrentProducts","jsxDEV","_jsxDEV","SortByProps","_s","dispatch","filters","ttl","name","variants","register","handleSubmit","control","formState","errors","sendProps","types","state","prodTypes","sortBy","props","Params","changeHandler","event","_event$currentTarget$","_event$currentTarget$2","currentTarget","previousElementSibling","classList","toggle","active","contains","_event$currentTarget$3","nextElementSibling","innerHTML","_event$currentTarget$4","responce","then","res","console","log","catch","err","error","className","block","onSubmit","children","map","topic","title","fileName","_jsxFileName","lineNumber","columnNumber","inputs","vari","label","fakeCheckbox","checkbox","type","onChange","inputText","_c","$RefreshReg$"],"sources":["D:/Рабочий стол/redux/Lover-Flower/client/src/features/SortByProps/SortByProps.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pushParam, popParam } from '../../redux/slices/Params';\r\nimport styles from './styles/SortByProps.module.scss';\r\n\r\nimport {getCurrentProducts} from './api/getProducts.ts';\r\n\r\n\r\nconst SortByProps = () => {\r\n    const dispatch = useDispatch();\r\n    const filters = [\r\n        {ttl: 'ПО СВЕТУ', name: 'light', variants: ['нежные', 'яркие']},\r\n        {ttl: 'ПО ЦВЕТУ', name: 'cost', variants: ['белый', 'желтый', 'зеленый', 'красный', 'оранжевый', 'розовый', 'синий']},\r\n        {ttl: 'ПО ФОРМАТУ', name: 'format', variants: ['букет', 'в вазе', 'в конверте', 'в корзине', 'в шляпной коробке', 'в ящике']},\r\n        {ttl: 'СТОИМОСТЬ', name: 'Cost', variants: ['нежные', 'нежные']},\r\n        {ttl: 'ПО ЦВЕТКУ', name: 'flowers', variants: ['Альстромерия', 'Астильба', 'Альстромерия', 'Астильба', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Альстромерия']},\r\n    ]\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        formState: { errors },\r\n    } = useForm()\r\n\r\n    const sendProps = () => {\r\n\r\n    };\r\n\r\n    const types = useSelector((state: any) => state.prodTypes);\r\n    const sortBy = useSelector((state: any) => state.sortBy);\r\n    const props = useSelector((state: any) => state.Params);\r\n\r\n    const changeHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event?.currentTarget.previousElementSibling?.classList.toggle(styles.active);\r\n        const name = event?.currentTarget.name;\r\n\r\n\r\n        if (!event?.currentTarget.previousElementSibling?.classList.contains(styles.active)) {\r\n            dispatch(popParam({\r\n                [name]: event?.currentTarget.nextElementSibling?.innerHTML,\r\n            }))\r\n        } else {\r\n            dispatch(pushParam({\r\n                [name]: `${event?.currentTarget.nextElementSibling?.innerHTML}`,\r\n            }))\r\n        }\r\n\r\n        const responce = getCurrentProducts(types, sortBy, props);\r\n        responce.then((res: []) => {\r\n            console.log(\"Значение из промиса:\", res);\r\n          }).catch((err: any) => {\r\n            console.error(\"Ошибка:\", err);\r\n          });\r\n        \r\n\r\n    };\r\n\r\n    return (\r\n        <form className={styles.block} onSubmit={handleSubmit(sendProps)}>\r\n        {filters.map(topic => {\r\n            return (\r\n                <div className=\"\">\r\n                    <h2 className={styles.title}>{topic.ttl}</h2>\r\n                    <div className={styles.inputs}>\r\n                        {topic.variants.map((vari) => {\r\n                            return (\r\n                                <label className={styles.label}>\r\n                                    <div className={styles.fakeCheckbox}></div>\r\n                                    <input className={styles.checkbox} type={'checkbox'} {...register(`${topic.name}`, { onChange: changeHandler })}/>\r\n                                    <span className={styles.inputText}>{vari}</span>\r\n                                </label>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SortByProps;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}