{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\redux\\\\Lover-Flower\\\\client\\\\src\\\\features\\\\TypeOfFlower\\\\TypeOfFlower.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport styles from './styles/FlowerType.module.scss';\nimport getProducts from './api/getRequest.ts';\nimport { addProducts, deleteProducts } from '../../redux/slices/Products';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeOfFlower = () => {\n  _s();\n  const dispatch = useDispatch();\n  const buttons = ['Букеты из гипсофил', 'Букеты из ромашек', 'Букеты из хризантем', 'Комнатные цветы в горшках', 'Монобукеты', 'Сборные букеты', 'Букет на праздник', 'Композиции из цветов', 'Конверты', 'Открытки', 'Подарки', 'Букеты из сухоцветов', 'Шары', 'Популярное', 'Букеты роз', 'Цветы на похороны', 'Упаковка подарков'];\n  function FindExaxts(event) {\n    const type = event === null || event === void 0 ? void 0 : event.currentTarget.innerText;\n    const typedProducts = getProducts(type);\n    if (event !== null && event !== void 0 && event.currentTarget.classList.contains(`${styles.active}`)) {\n      typedProducts.then(res => {\n        dispatch(deleteProducts(res));\n      });\n    } else {\n      typedProducts.then(res => {\n        dispatch(addProducts(res));\n      });\n    }\n    event === null || event === void 0 ? void 0 : event.currentTarget.classList.toggle(styles.active);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.block,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.ttl,\n      children: \"\\u043A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `${styles.ttl} ${styles.ttlSecond}`,\n      children: \"\\u0431\\u0443\\u043A\\u0435\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.paragraph,\n      children: \"\\u0412 \\u043D\\u0430\\u0448\\u0435\\u043C \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u0435 \\u0441\\u0430\\u043C\\u044B\\u0439 \\u0431\\u043E\\u043B\\u044C\\u0448\\u043E\\u0439 \\u0432\\u044B\\u0431\\u043E\\u0440 \\u0431\\u0443\\u043A\\u0435\\u0442\\u043E\\u0432 \\u0434\\u043B\\u044F \\u043B\\u044E\\u0431\\u044B\\u0445 \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u0439:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.topics,\n      children: buttons.map(string => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.topic,\n          onClick: FindExaxts,\n          children: string\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(TypeOfFlower, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = TypeOfFlower;\nexport default TypeOfFlower;\nvar _c;\n$RefreshReg$(_c, \"TypeOfFlower\");","map":{"version":3,"names":["styles","getProducts","addProducts","deleteProducts","useDispatch","jsxDEV","_jsxDEV","TypeOfFlower","_s","dispatch","buttons","FindExaxts","event","type","currentTarget","innerText","typedProducts","classList","contains","active","then","res","toggle","className","block","children","ttl","fileName","_jsxFileName","lineNumber","columnNumber","ttlSecond","paragraph","topics","map","string","topic","onClick","_c","$RefreshReg$"],"sources":["D:/Рабочий стол/redux/Lover-Flower/client/src/features/TypeOfFlower/TypeOfFlower.tsx"],"sourcesContent":["// import React from 'react';\r\nimport styles from './styles/FlowerType.module.scss';\r\nimport getProducts from './api/getRequest.ts';\r\n\r\nimport { addProducts, deleteProducts } from '../../redux/slices/Products';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst TypeOfFlower = () => {\r\n    const dispatch = useDispatch();\r\n    const buttons: string[] = [\r\n        'Букеты из гипсофил', 'Букеты из ромашек', 'Букеты из хризантем','Комнатные цветы в горшках','Монобукеты','Сборные букеты','Букет на праздник',\r\n        'Композиции из цветов','Конверты','Открытки','Подарки','Букеты из сухоцветов','Шары','Популярное','Букеты роз','Цветы на похороны','Упаковка подарков',\r\n    ];\r\n\r\n    function FindExaxts(event: React.MouseEvent<HTMLButtonElement>) {\r\n        const type = event?.currentTarget.innerText;\r\n        const typedProducts = getProducts(type);\r\n       \r\n        if (event?.currentTarget.classList.contains(`${styles.active}`)) {\r\n            typedProducts.then((res: []) => {\r\n                dispatch(deleteProducts(res))\r\n            })\r\n        } else {\r\n            typedProducts.then((res: []) => {\r\n                dispatch(addProducts(res))\r\n            })\r\n        }\r\n       \r\n        event?.currentTarget.classList.toggle(styles.active);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.block}>\r\n            <h2 className={styles.ttl}>каталог</h2>\r\n            <h2 className={`${styles.ttl} ${styles.ttlSecond}`}>букетов</h2>\r\n            <p className={styles.paragraph}>\r\n                В нашем магазине самый большой выбор букетов для любых событий:\r\n            </p>\r\n            <div className={styles.topics}>\r\n                {buttons.map(string => {\r\n                    return (\r\n                        <button className={styles.topic} onClick={FindExaxts}>\r\n                            {string}\r\n                        </button>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypeOfFlower;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}