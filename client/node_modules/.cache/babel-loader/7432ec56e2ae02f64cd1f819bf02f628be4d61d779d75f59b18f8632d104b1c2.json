{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\redux\\\\Lover-Flower\\\\client\\\\src\\\\features\\\\TypeOfFlower\\\\TypeOfFlower.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from './styles/FlowerType.module.scss';\nimport { pushType, popType } from '../../redux/slices/ProductTypes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { update } from '../../redux/slices/Products';\nimport getCurrentProducts from './api/getRequest.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeOfFlower = () => {\n  _s();\n  const dispatch = useDispatch();\n  const buttons = ['Букеты из гипсофил', 'Букеты из ромашек', 'Букеты из хризантем', 'Комнатные цветы в горшках', 'Монобукеты', 'Сборные букеты', 'Букет на праздник', 'Композиции из цветов', 'Конверты', 'Открытки', 'Подарки', 'Букеты из сухоцветов', 'Шары', 'Популярное', 'Букеты роз', 'Цветы на похороны', 'Упаковка подарков'];\n  const types = useSelector(state => state.prodTypes);\n  const sortBy = useSelector(state => state.sortby);\n  const props = useSelector(state => state.Params);\n  function FindExaxts(event) {\n    const type = event === null || event === void 0 ? void 0 : event.currentTarget.innerText;\n    console.log(types.value.concat(type));\n    const obj = {\n      types: {\n        value: ''\n      },\n      sortBy,\n      props\n    };\n    // const typedProducts = getCurrentProducts(obj);\n\n    if (event !== null && event !== void 0 && event.currentTarget.classList.contains(`${styles.active}`)) {\n      dispatch(popType(type));\n    } else {\n      dispatch(pushType(type));\n    }\n\n    // dispatch\n\n    event === null || event === void 0 ? void 0 : event.currentTarget.classList.toggle(styles.active);\n    try {\n      getCurrentProducts(obj).then(res => {\n        dispatch(update(res));\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.block,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.ttl,\n      children: \"\\u043A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `${styles.ttl} ${styles.ttlSecond}`,\n      children: \"\\u0431\\u0443\\u043A\\u0435\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.paragraph,\n      children: \"\\u0412 \\u043D\\u0430\\u0448\\u0435\\u043C \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u0435 \\u0441\\u0430\\u043C\\u044B\\u0439 \\u0431\\u043E\\u043B\\u044C\\u0448\\u043E\\u0439 \\u0432\\u044B\\u0431\\u043E\\u0440 \\u0431\\u0443\\u043A\\u0435\\u0442\\u043E\\u0432 \\u0434\\u043B\\u044F \\u043B\\u044E\\u0431\\u044B\\u0445 \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u0439:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.topics,\n      children: buttons.map(string => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.topic,\n          onClick: FindExaxts,\n          children: string\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(TypeOfFlower, \"P1DZeJfF66uv7qKVj/V9TxoUOsQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = TypeOfFlower;\nexport default TypeOfFlower;\nvar _c;\n$RefreshReg$(_c, \"TypeOfFlower\");","map":{"version":3,"names":["React","styles","pushType","popType","useDispatch","useSelector","update","getCurrentProducts","jsxDEV","_jsxDEV","TypeOfFlower","_s","dispatch","buttons","types","state","prodTypes","sortBy","sortby","props","Params","FindExaxts","event","type","currentTarget","innerText","console","log","value","concat","obj","classList","contains","active","toggle","then","res","err","error","className","block","children","ttl","fileName","_jsxFileName","lineNumber","columnNumber","ttlSecond","paragraph","topics","map","string","topic","onClick","_c","$RefreshReg$"],"sources":["D:/Рабочий стол/redux/Lover-Flower/client/src/features/TypeOfFlower/TypeOfFlower.tsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './styles/FlowerType.module.scss';\r\nimport getProducts from './api/getRequest.ts';\r\n\r\nimport { pushType, popType } from '../../redux/slices/ProductTypes';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { update } from '../../redux/slices/Products';\r\nimport getCurrentProducts from './api/getRequest.ts';\r\n\r\nconst TypeOfFlower = () => {\r\n    const dispatch = useDispatch();\r\n    const buttons: string[] = [\r\n        'Букеты из гипсофил', 'Букеты из ромашек', 'Букеты из хризантем','Комнатные цветы в горшках','Монобукеты','Сборные букеты','Букет на праздник',\r\n        'Композиции из цветов','Конверты','Открытки','Подарки','Букеты из сухоцветов','Шары','Популярное','Букеты роз','Цветы на похороны','Упаковка подарков',\r\n    ];\r\n\r\n    const types = useSelector((state: any) => state.prodTypes);\r\n    const sortBy = useSelector((state: any) => state.sortby);\r\n    const props = useSelector((state: any) => state.Params);\r\n\r\n    function FindExaxts(event: React.MouseEvent<HTMLButtonElement>) {\r\n        const type = event?.currentTarget.innerText;\r\n\r\n        console.log(types.value.concat(type));\r\n        \r\n\r\n        const obj = { types: {\r\n            value: '',\r\n        }, sortBy, props };\r\n        // const typedProducts = getCurrentProducts(obj);\r\n       \r\n        if (event?.currentTarget.classList.contains(`${styles.active}`)) {\r\n            dispatch(popType(type))\r\n        } else {\r\n            dispatch(pushType(type))\r\n        }\r\n\r\n        // dispatch\r\n       \r\n        event?.currentTarget.classList.toggle(styles.active);\r\n\r\n        try {\r\n            getCurrentProducts(obj)\r\n            .then((res: any) => {\r\n                dispatch(update(res));\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.block}>\r\n            <h2 className={styles.ttl}>каталог</h2>\r\n            <h2 className={`${styles.ttl} ${styles.ttlSecond}`}>букетов</h2>\r\n            <p className={styles.paragraph}>\r\n                В нашем магазине самый большой выбор букетов для любых событий:\r\n            </p>\r\n            <div className={styles.topics}>\r\n                {buttons.map(string => {\r\n                    return (\r\n                        <button className={styles.topic} onClick={FindExaxts}>\r\n                            {string}\r\n                        </button>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypeOfFlower;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}