[{"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\index.tsx":"1","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\app\\App.tsx":"2","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\store\\index.ts":"3","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\Home\\Home.tsx":"4","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\Catalog\\Catalog.tsx":"5","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\ProductPage\\ProductPage.tsx":"6","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\OrderPage\\OrderPage.tsx":"7","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\PaySuccess\\PaySuccess.tsx":"8","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\PayWrong\\PayWrong.tsx":"9","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\DeliveryPage\\DeliveryPage.tsx":"10","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\AboutUsPage\\AboutUs.tsx":"11","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\ContactsPage\\ContactsPage.tsx":"12","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\FAQPage\\FAQPage.tsx":"13","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Medias\\index.tsx":"14","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\shared\\Logo\\Logo.tsx":"15","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CatalogAbout\\index.tsx":"16","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\DescriptionBlock\\index.tsx":"17","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\PopularFlowers\\index.tsx":"18","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\SliderCart\\index.tsx":"19","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HowMakeOrder\\HowMakeOrder.tsx":"20","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\SpecialOccassion\\index.tsx":"21","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Footer\\index.tsx":"22","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HaveQuestions\\index.tsx":"23","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\InstaBlock\\index.tsx":"24","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Busket.js":"25","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Basket\\index.tsx":"26","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\OrderCall\\index.tsx":"27","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HeroSection\\HeroSection.tsx":"28","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Header\\index.tsx":"29","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\TopHeader\\TopHeader.tsx":"30","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Search\\Search.tsx":"31","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\TypeOfFlower\\TypeOfFlower.tsx":"32","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CatalogHeroSection\\CatalogHero.tsx":"33","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\NotFound\\NotFound.tsx":"34","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\TypeOfFlower\\api\\getRequest.ts":"35","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Products.js":"36","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductsList\\ProductsList.tsx":"37","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductsList\\api\\api.ts":"38","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortBy\\SortBy.tsx":"39","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\ProductTypes.js":"40","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortBy\\api\\api.ts":"41","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Params.js":"42","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortByProps\\SortByProps.tsx":"43","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\SortBy.js":"44","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortByProps\\api\\getProducts.js":"45","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\ProductSnippet\\ProductSnippet.tsx":"46","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\CorporativeClients\\CorporativeClients.tsx":"47","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Rating\\Rating.tsx":"48","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ReviewBlock\\ReviewBlock.tsx":"49","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\HaveQuestionForm\\HaveQuestionForm.tsx":"50"},{"size":335,"mtime":1690803112812,"results":"51","hashOfConfig":"52"},{"size":1936,"mtime":1698833615207,"results":"53","hashOfConfig":"52"},{"size":488,"mtime":1695910539634,"results":"54","hashOfConfig":"52"},{"size":961,"mtime":1699360278657,"results":"55","hashOfConfig":"52"},{"size":527,"mtime":1698399621405,"results":"56","hashOfConfig":"52"},{"size":13005,"mtime":1699521786365,"results":"57","hashOfConfig":"52"},{"size":15520,"mtime":1699450120120,"results":"58","hashOfConfig":"52"},{"size":1376,"mtime":1697626057897,"results":"59","hashOfConfig":"52"},{"size":1350,"mtime":1697635096946,"results":"60","hashOfConfig":"52"},{"size":9248,"mtime":1698920604434,"results":"61","hashOfConfig":"52"},{"size":5072,"mtime":1698920120656,"results":"62","hashOfConfig":"52"},{"size":3891,"mtime":1699368214850,"results":"63","hashOfConfig":"52"},{"size":12927,"mtime":1699442234774,"results":"64","hashOfConfig":"52"},{"size":621,"mtime":1694087352650,"results":"65","hashOfConfig":"52"},{"size":284,"mtime":1698845758136,"results":"66","hashOfConfig":"52"},{"size":1902,"mtime":1693560905949,"results":"67","hashOfConfig":"52"},{"size":755,"mtime":1690974470155,"results":"68","hashOfConfig":"52"},{"size":2792,"mtime":1698145148739,"results":"69","hashOfConfig":"52"},{"size":1607,"mtime":1699261287581,"results":"70","hashOfConfig":"52"},{"size":3052,"mtime":1693999973850,"results":"71","hashOfConfig":"52"},{"size":2116,"mtime":1694003874614,"results":"72","hashOfConfig":"52"},{"size":5180,"mtime":1698845541716,"results":"73","hashOfConfig":"52"},{"size":1421,"mtime":1699368178960,"results":"74","hashOfConfig":"52"},{"size":1207,"mtime":1694096669740,"results":"75","hashOfConfig":"52"},{"size":1323,"mtime":1698391576007,"results":"76","hashOfConfig":"52"},{"size":2670,"mtime":1699539675220,"results":"77","hashOfConfig":"52"},{"size":2826,"mtime":1699540039033,"results":"78","hashOfConfig":"52"},{"size":1275,"mtime":1699540469260,"results":"79","hashOfConfig":"52"},{"size":5234,"mtime":1698678437889,"results":"80","hashOfConfig":"52"},{"size":4762,"mtime":1699354417891,"results":"81","hashOfConfig":"52"},{"size":3493,"mtime":1699540235906,"results":"82","hashOfConfig":"52"},{"size":2706,"mtime":1699540340926,"results":"83","hashOfConfig":"52"},{"size":2924,"mtime":1699540426626,"results":"84","hashOfConfig":"52"},{"size":839,"mtime":1695034521445,"results":"85","hashOfConfig":"52"},{"size":637,"mtime":1695982307043,"results":"86","hashOfConfig":"52"},{"size":665,"mtime":1695972811160,"results":"87","hashOfConfig":"52"},{"size":1658,"mtime":1699540538806,"results":"88","hashOfConfig":"52"},{"size":250,"mtime":1699540534482,"results":"89","hashOfConfig":"52"},{"size":1954,"mtime":1699540289641,"results":"90","hashOfConfig":"52"},{"size":465,"mtime":1695303469216,"results":"91","hashOfConfig":"52"},{"size":635,"mtime":1699540250290,"results":"92","hashOfConfig":"52"},{"size":703,"mtime":1695734565432,"results":"93","hashOfConfig":"52"},{"size":3723,"mtime":1696341058828,"results":"94","hashOfConfig":"52"},{"size":356,"mtime":1695910655302,"results":"95","hashOfConfig":"52"},{"size":469,"mtime":1695972556712,"results":"96","hashOfConfig":"52"},{"size":2460,"mtime":1698402783715,"results":"97","hashOfConfig":"52"},{"size":19970,"mtime":1699531781994,"results":"98","hashOfConfig":"52"},{"size":4255,"mtime":1699540085768,"results":"99","hashOfConfig":"52"},{"size":3385,"mtime":1699540600940,"results":"100","hashOfConfig":"52"},{"size":2920,"mtime":1699540025948,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"3m63yd",{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"105"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\index.tsx",[],[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\app\\App.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\store\\index.ts",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\Home\\Home.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\Catalog\\Catalog.tsx",["267","268","269"],[],"import React from 'react';\r\n\r\nimport Footer from '../../widgets/Footer/index.tsx';\r\nimport CatalogHero from '../../widgets/CatalogHeroSection/CatalogHero';\r\nimport ProductsList from '../../widgets/ProductsList/ProductsList';\r\nimport SortBy from '../../features/SortBy/SortBy';\r\nimport SortByProps from '../../features/SortByProps/SortByProps';\r\n\r\nconst Catalog = () => {\r\n    return (\r\n        <div className='Catalog'>\r\n            <CatalogHero />\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Catalog;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\ProductPage\\ProductPage.tsx",["270","271","272","273","274"],[],"import React from 'react';\r\nimport styles from './styles/prodPage.module.scss';\r\n\r\nimport TopHeader from '../../widgets/TopHeader/TopHeader.tsx';\r\nimport PopularFlowers from '../../widgets/PopularFlowers/index.tsx';\r\nimport Footer from '../../widgets/Footer/index.tsx';\r\n\r\nimport main from '../../img/main-product-img.png';\r\nimport first from '../../img/first-product-img.png';\r\nimport second from '../../img/second-product-img.png';\r\n\r\nimport background from '../../img/product-page-background.png';\r\n\r\nimport arrow from '../../img/sliderarrow.svg';\r\nimport arrowSecond from '../../img/sliderrightarrow.svg';\r\nimport img1 from '../../img/slider1.png';\r\n\r\nimport Cart from '../../entities/SliderCart/index';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProduct } from '../../redux/slices/Busket.js';\r\nimport { useForm } from 'react-hook-form';\r\nimport Rating from '../../features/Rating/Rating';\r\nimport ReviewBlock from '../../widgets/ReviewBlock/ReviewBlock';\r\n\r\ntype Product = {\r\n    id: number;\r\n    cost: number;\r\n    title: string;\r\n    imgs: string[];\r\n    colors: string[];\r\n    light: string;\r\n    format: string;\r\n    flowers: string[];\r\n    description: string;\r\n    categories: string[];\r\n    topics: string[];\r\n    createdAt: string;\r\n    updatedAt: string;\r\n};\r\n\r\nconst ProductPage = () => {\r\n    let [margin, setMargin] = React.useState(0);\r\n\r\n    const moveRight = () => {\r\n        if (margin > -1100) {\r\n            setMargin(margin -= 380)\r\n        } else {\r\n            setMargin(0)\r\n        }\r\n    }\r\n    \r\n    const moveLeft = () => {\r\n        if (margin >= 0) {\r\n            setMargin(-1140)\r\n        } else {\r\n            setMargin(margin += 380)\r\n        }\r\n    }\r\n\r\n    const [toggle, setToggle] = React.useState(true);\r\n\r\n    function changeOption () {\r\n        setToggle(!toggle);\r\n    }\r\n\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const [data, setData] = React.useState<Product>();\r\n\r\n    React.useEffect(() => {\r\n        fetch(`http://localhost:5000/api/products/getproduct/${id}`).then((res: any) => res.json()).then((res: any) => setData(res))\r\n    }, [])\r\n\r\n    let [count, setCount] = React.useState(1)\r\n\r\n    function chooseCount(event: React.MouseEvent<HTMLButtonElement>) {\r\n        if (event.currentTarget.innerText === '+') {\r\n            setCount(count += 1);\r\n        } else if (count > 1) { \r\n            setCount(count -= 1);\r\n        };\r\n    }\r\n\r\n    function addToBusket(event: React.MouseEvent<HTMLButtonElement>) {\r\n        const productInformData = { id: data?.id, cost: data?.cost, ttl: data?.title, count }\r\n\r\n        if (!event.currentTarget.classList.contains('btnDisabled')) {\r\n            event.currentTarget.classList.add('btnDisabled')\r\n\r\n            localStorage.BusketInform = JSON.stringify(JSON.parse(localStorage.BusketInform).concat(productInformData));\r\n            dispatch(addProduct(productInformData));\r\n        }\r\n    }\r\n\r\n    //\r\n    const [disabled, setDisabled] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (JSON.parse(localStorage.BusketInform).some((obj: any) => obj.id === Number(id?.slice(1)))) {\r\n            setDisabled(true)\r\n        }\r\n    }, [])\r\n\r\n    \r\n\r\n    return (\r\n        <div className={styles.page}>\r\n            <img className={styles.background} src={background} alt=\"background\" />\r\n            <TopHeader />\r\n\r\n                <div className={styles.productAbout}>\r\n                    <div className={styles.galary}>\r\n                        <img src={first} alt=\"galary\" />\r\n                        <img src={main} alt=\"galary\" />\r\n                        <img src={second} alt=\"galary\" />\r\n                    </div>\r\n                    <div className={styles.description}>\r\n                        <a className={styles.goBack} href=\"/catalog\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\r\n                                <path d=\"M10.2713 12.1045L6.5 8.33316L10.2713 4.56183L10.7427 5.03316L7.44267 8.33316L10.7427 11.6332L10.2713 12.1045Z\" fill=\"white\"/>\r\n                            </svg>\r\n                            назад\r\n                        </a>\r\n                        <h2 className={styles.descriptionTtl}>{data?.title}</h2>\r\n                        <h2 className={styles.cost}>{data?.cost} p</h2>\r\n                        <p className={styles.structure}>\r\n                            <strong>Состав:</strong> Гвоздика (Диантус), Леукодендрон, Леукоспермум (Нутан), Лотос, Роза\r\n                        </p>\r\n                        <p className={styles.productDescription}>\r\n                            Завораживающая глубина ваших чувств передана огненными красками этого букета\r\n                        </p>\r\n                        <p className={styles.category}>\r\n                            <strong>Категории:</strong>  8 марта, Букет на 14 февраля, Букет на праздник, Букеты цветов на День рождения, Композиции из цветов, Композиции из цветов в коробке\r\n                        </p>\r\n                        <p className={styles.types}>\r\n                            <strong>Метки:</strong> Для начальника, Мужские букеты\r\n                        </p>\r\n\r\n                        <div className={styles.buyInterface}>\r\n                            <button className={`whiteBtn ${disabled && 'btnDisabled'}`} onClick={addToBusket}>В корзину</button>\r\n\r\n                            <div className={styles.counter}>\r\n                                <button className={styles.minus} onClick={chooseCount}>–</button>\r\n                                <div className={styles.count}>{count}</div>\r\n                                <button className={styles.plus} onClick={chooseCount}>+</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            <h2 className={styles.additionalTtl}>Дополнительно к заказу:</h2>\r\n            <div className={styles.aditionalOptions}>\r\n                <div className={styles.option}>\r\n                    <h2 className={styles.ttlOption}>Удобрения для срезанных цветов</h2>\r\n                    <p className={styles.paragraphOption}>\r\n                        При указании об этом в пожеланиях к букету, мы приложим пакетик удобрения для вас\r\n                    </p>\r\n                </div>\r\n                <div className={styles.option}>\r\n                    <h2 className={styles.ttlOption}>подпишем <br /> открытку</h2>\r\n                    <p className={styles.paragraphOption}>\r\n                        В пожеланиях к букету укажите текст, какой хотите разместить и выберите на сайте саму открытку\r\n                    </p>\r\n                </div>\r\n                <div className={styles.option}>\r\n                    <h2 className={styles.ttlOption}>Фото букета<br /> перед отправкой</h2>\r\n                    <p className={styles.paragraphOption}>\r\n                        В примечании к заказу укажите \r\n                        об этом и мы отправим фото готового букета перед доставкой. \r\n                        В праздничные дни в связи \r\n                        с большой загруженностью такой возможности нет\r\n                    </p>\r\n                </div>\r\n                <div className={styles.option}>\r\n                    <h2 className={styles.ttlOption}>Букет-сюрприз</h2>\r\n                    <p className={styles.paragraphOption}>\r\n                        Если хотите, чтобы получатель не знал, что ему вручат а также от кого, то укажите об этом \r\n                        в примечании к заказу\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={styles.switchOptions}>\r\n                <div className={styles.switchBtns}>\r\n                    <h2 className={`${styles.btn} ${toggle && styles.activeBtn}`} onClick={changeOption}>доставка и оплата</h2>\r\n                    <h2 className={`${styles.btn} ${!toggle && styles.activeBtn}`} onClick={changeOption}>отзывы</h2>\r\n                </div>\r\n                <div className={`${styles.slider} ${!toggle && styles.triggerActive}`}>\r\n                    <div className={styles.sliderTrigger}></div>\r\n                </div>\r\n            </div>\r\n\r\n            {toggle ?\r\n                <div className={styles.deliveryVariant}>\r\n\r\n                    <h2 className={styles.seliveryVarTtl}>Способы оплаты:</h2>\r\n                    <ul className={styles.deliveryList}>\r\n                        <li className={styles.deliveryListItem}>БАНКОВСКОЙ КАРТОЙ ПРИ ОФОРМЛЕНИИ ЗАКАЗА ЧЕРЕЗ САЙТ</li>\r\n                        <li className={styles.deliveryListItem}>НАЛИЧНЫМИ ИЛИ БАНКОВСКОЙ КАРТОЙ ПРИ САМОВЫВОЗЕ</li>\r\n                        <li className={styles.deliveryListItem}>НАЛИЧНЫМИ ПРИ ДОСТАВКЕ КУРЬЕРОМ</li>\r\n                        <li className={styles.deliveryListItem}>КРИПТОВАЛЮТОЙ ОНЛАЙН</li>\r\n                    </ul>\r\n\r\n                    <h2 className={styles.seliveryVarTtl}>Способы оплаты:</h2>\r\n                    <ul className={styles.deliveryList}>\r\n                        <li className={styles.deliveryListItem}><strong>Бесплатно</strong> – при заказе на сумму <span className={styles.greenText}> от 90 рублей</span></li>\r\n                        <li className={styles.deliveryListItem}><strong>10 рублей</strong> – при заказе на сумму <span className={styles.greenText}> менее 90 рублей</span></li>\r\n                        <li className={styles.deliveryListItem}>Возможность, сроки и стоимость доставки за пределы МКАД, доставки в ночное время, праздники <span className={styles.greenText}>оговариваются с менеджером</span></li>\r\n                        <li className={styles.deliveryListItem}>Так же вы можете забрать ваш заказ самостоятельно по адресу:<p className={styles.greenText}> г. Минск, ул. Тимирязева д. 67, комн. 112 ежедневно с 10.00 до 21.00</p></li>\r\n                    </ul>\r\n\r\n                    <h2 className={styles.seliveryVarTtl}>Способы оплаты:</h2>\r\n                    <ul className={styles.deliveryList}>\r\n                        <li className={styles.deliveryListItem}>Доставка осуществляется по городу Минску в пределах МКАД <span className={styles.greenText}>в любой день с 09.00 до 22.00.</span> Доставка в ночное время осуществляется по договоренности с оператором</li>\r\n                    </ul>\r\n                </div> :\r\n                <div className={styles.comments}>\r\n                    <ReviewBlock id={`${id}`} />\r\n                </div>\r\n            }\r\n\r\n            <div className={styles.prodPageBtns}>\r\n                <img className={styles.prodPageSliderArrow} src={arrow} alt=\"\" onClick={moveLeft}/>\r\n                <img className={styles.prodPageSliderArrow} src={arrowSecond} alt=\"\" onClick={moveRight}/>\r\n            </div>\r\n            <div className={styles.prodPageSlider}>\r\n                <div className={styles.sliderLine} style={{marginLeft: `${margin}px`}}>\r\n                    <Cart id={5} img={img1} ttl='лучший день' cost='167.000 ₽' />\r\n                    <Cart id={5} img={img1} ttl='лучший день' cost='167.000 ₽' />\r\n                    <Cart id={5} img={img1} ttl='лучший день' cost='167.000 ₽' />\r\n                    <Cart id={5} img={img1} ttl='лучший день' cost='167.000 ₽' />\r\n                    <Cart id={5} img={img1} ttl='лучший день' cost='167.000 ₽' />\r\n                    <Cart id={5} img={img1} ttl='лучший день' cost='167.000 ₽' />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductPage;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\OrderPage\\OrderPage.tsx",["275","276"],[],"import React from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nimport styles from './styles/orderPage.module.scss';\r\n\r\nimport background from '../../img/order-page-background.png';\r\nimport backgroundMobile from '../../img/order-mobile.png';\r\nimport TopHeader from '../../widgets/TopHeader/TopHeader';\r\nimport Footer from '../../widgets/Footer/index.tsx';\r\nimport ProductSnippet from '../../entities/ProductSnippet/ProductSnippet';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateStore } from '../../redux/slices/Busket';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst OrderPage = () => {\r\n    const {\r\n        control,\r\n        formState: {\r\n            errors\r\n        },\r\n        register,\r\n        handleSubmit,\r\n    } = useForm({\r\n        mode: 'onBlur',\r\n    })\r\n\r\n    const sendProps = () => {};\r\n\r\n    function changeRadio(event: any) {\r\n        elements.current.forEach((btn: any) => {\r\n            btn.classList.remove(styles.fakeRadioBorder)\r\n        });\r\n        event.currentTarget.previousElementSibling?.classList.toggle(styles.fakeRadioBorder)\r\n    }\r\n\r\n    const elements = React.useRef([]);\r\n\r\n    React.useEffect(() => {\r\n        elements.current = Array.from(document.querySelectorAll('.fakeBtn'));\r\n    }, [])\r\n\r\n    //\r\n    const dispatch = useDispatch();\r\n\r\n    const products = useSelector((state: any) => state.basket.value);\r\n    const amount = products.reduce((sum: number, obj: any) => sum + obj.cost * obj.count, 0)\r\n\r\n    React.useEffect(() => {\r\n        dispatch(updateStore(JSON.parse(localStorage.BusketInform)));\r\n    }, [])\r\n\r\n    function orderFlowers(data: any) {\r\n        data.orderedProducts = localStorage.BusketInform;\r\n\r\n        fetch('http://localhost:5000/api/orders', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }).then((responce: any) => responce.json())\r\n        .then((result: any) => {\r\n            localStorage.BusketInform = JSON.stringify([]);\r\n            window.location.assign('/paysuccess')\r\n        })\r\n        .catch(() => {\r\n            window.location.assign('/paywrong')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={styles.block}>\r\n            <TopHeader />\r\n            <img className={styles.background} src={document.body.clientWidth > 800 ? background : backgroundMobile} alt=\"\" />\r\n\r\n            <div className={styles.wrapper}>\r\n                <div>\r\n                    <span className={styles.navLink}><a href='/'>Главная </a> / <a href='/order'>оформление заказа</a></span>\r\n                    <h2 className={styles.ttl}>оформление</h2>\r\n                    <h2 className={styles.secondTtl}>заказа</h2>\r\n\r\n                    <h2 className={styles.orderTtl}>Оформление заказа</h2>\r\n                    <h2 className={styles.orderSubttl}>Контактные данные</h2>\r\n\r\n                    <form onSubmit={handleSubmit(orderFlowers)}>\r\n                        <h2 className={styles.inputTtl}>Ваше имя*</h2>\r\n                        <input className={`input ${errors?.name && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"name\", {\r\n                            required: 'Поле имя є обов\\'язковим',\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'поле имя необходимо заполнить видом Антон'\r\n                            }\r\n                        })}/>\r\n                        {errors?.name && <h2 className='errorMessage'>поле имя необходимо заполнить видом Антон</h2>}\r\n                        \r\n                        <h2 className={styles.inputTtl}>Ваш телефон*</h2>\r\n                        <input className={`input ${errors?.number && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"number\", {\r\n                            required: 'Поле имя є обов\\'язковим',\r\n                            pattern: {\r\n                                value: /^\\+\\d{10}$/,\r\n                                message: 'поле имя необходимо заполнить видом +7990000000'\r\n                            }\r\n                        })}/>\r\n                        {errors?.number && <h2 className='errorMessage'>поле имя необходимо заполнить видом +7990000000</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Ваш e-mail*</h2>\r\n                        <input className={`input ${errors?.mail && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"mail\", {\r\n                            required: 'Поле имя є обов\\'язковим',\r\n                            pattern: {\r\n                                value: /^\\S+@\\S+\\.\\S+$/,\r\n                                message: 'Будь ласка, введіть правильний адресу електронної пошти'\r\n                            }\r\n                        })}/>\r\n                        {errors?.mail && <h2 className='errorMessage'>Будь ласка, введіть правильний адресу електронної пошти</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Телефон получателя (необязательно)</h2>\r\n                        <input className={`input ${errors?.personNumber && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"personNumber\", {\r\n                            required: false,\r\n                            pattern: {\r\n                                value: /^\\+\\d{10}$/,\r\n                                message: 'поле имя необходимо заполнить видом +7990000000'\r\n                            }\r\n                        })}/>\r\n                        {errors?.personNumber && <h2 className='errorMessage'>поле имя необходимо заполнить видом +7990000000</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Имя получателя (необязательно)</h2>\r\n                        <input className={`input ${errors?.personName && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"personName\", {\r\n                            required: false,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'поле имя необходимо заполнить видом Антон'\r\n                            }\r\n                        })}/>\r\n                        {errors?.personName && <h2 className='errorMessage'>поле имя необходимо заполнить видом Антон</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Комментарий к заказу</h2>\r\n                        <input className={`input ${errors?.comment && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"comment\", {\r\n                            required: false,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'комментарий не должэен быть пустым'\r\n                            }\r\n                        })}/>\r\n                        {errors?.comment && <h2 className='errorMessage'>комментарий не должэен быть пустым</h2>}\r\n                        \r\n                        <h2 className={styles.orderSubttl}>Доставка</h2>\r\n\r\n                        <h2 className={styles.inputTtl}>Город*</h2>\r\n                        <input className={`input ${errors?.city && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"city\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'комментарий не должэен быть пустым'\r\n                            }\r\n                        })}/>\r\n                        {errors?.city && <h2 className='errorMessage'>введите название города</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Улица*</h2>\r\n                        <input className={`input ${errors?.street && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"street\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'комментарий не должэен быть пустым'\r\n                            }\r\n                        })}/>\r\n                        {errors?.street && <h2 className='errorMessage'>введите название улицы</h2>}\r\n                        \r\n                        <div className={styles.deliveryInputs}>\r\n                            <label htmlFor=\"\">\r\n                                <h2 className={styles.inputTtl}>Корп/стр</h2>\r\n                                <input className={styles.deliveryInput} type=\"text\" placeholder='Корп/стр' {...register(\"corp\")}/>\r\n                            </label>\r\n                            <label htmlFor=\"\">\r\n                                <h2 className={styles.inputTtl}>Дом</h2>\r\n                                <input className={styles.deliveryInput} type=\"text\" placeholder='Дом' {...register(\"house\")}/>\r\n                            </label>\r\n                            <label htmlFor=\"\">\r\n                                <h2 className={styles.inputTtl}>Кв/офис</h2>\r\n                                <input className={styles.deliveryInput} type=\"text\" placeholder='Кв/офис' {...register(\"office\")}/>\r\n                            </label>\r\n                            <label htmlFor=\"\">\r\n                                <h2 className={styles.inputTtl}>Время доставки</h2>\r\n                                <input className={styles.deliveryInput} type=\"text\" placeholder='__/__' {...register(\"deliveryTime\")}/>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className={styles.paymentVariant}>\r\n                            <h2 className={styles.orderSubttl}>Оплата</h2>\r\n                            <Controller\r\n                                name=\"deliveryType\" // Уникальное имя для радиокнопок\r\n                                control={control}\r\n                                defaultValue=\"option1\" // Значение по умолчанию\r\n                                render={({ field }) => (\r\n                                <div>\r\n                                     <label className={styles.radioLabel}>\r\n                                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                                            Банковская карта\r\n                                            <input className={styles.paymentRadio} type=\"radio\" value='bank-cart' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                                        </label>\r\n                                        <label className={styles.radioLabel}>\r\n                                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                                            Наличными\r\n                                            <input className={styles.paymentRadio} type=\"radio\" value='cash' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                                        </label>\r\n                                        <label className={styles.radioLabel}>\r\n                                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                                            Apple pay\r\n                                            <input className={styles.paymentRadio} type=\"radio\" value='apple-pay' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                                        </label>\r\n                                        <label className={styles.radioLabel}>\r\n                                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                                            Google pay\r\n                                            <input className={styles.paymentRadio} type=\"radio\" value='google-pay' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                                        </label>\r\n                                        <label className={styles.radioLabel}>\r\n                                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                                            Криптовалюта\r\n                                            <input className={styles.paymentRadio} type=\"radio\" value='crypto' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                                        </label>\r\n                                        <label className={styles.radioLabel}>\r\n                                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                                            С расчетного счета\r\n                                            <input className={styles.paymentRadio} type=\"radio\" value='from-payment-account' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                                        </label>\r\n                                </div>\r\n                                )}\r\n                            />\r\n                        </div>\r\n\r\n                        <h2 className={styles.orderTtl}>Общая сумма заказа</h2>\r\n                        <h2 className={styles.inputTtl}>Скидка = 0 ₽</h2>\r\n                        <h2 className={styles.inputTtl}>Доставка = 0 ₽</h2>\r\n                        <button className='greenBtn'>К оплате</button>\r\n                        <h2 className={styles.policy}>Нажимая  на кнопку «Отправить», я даю свое согласие на обработку персональных данных, в соответствии с <span className={styles.pink}>Политикой конфиденциальности</span></h2>\r\n                    </form>\r\n                </div>\r\n                <div className={styles.products}>\r\n                    <h2 className={styles.orderSubttl}>Ваш заказ:</h2>\r\n                    {products.map((product: any) => {\r\n                        return (\r\n                            <ProductSnippet id={product.id} cost={product.cost} count={product.count} ttl={product.ttl}/>\r\n                        );\r\n                    })}\r\n                    <h2 className={styles.orderSubttl}>Предварительный итог: {amount} руб.</h2>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderPage;",[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\PaySuccess\\PaySuccess.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\PayWrong\\PayWrong.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\DeliveryPage\\DeliveryPage.tsx",["277"],[],"import React from 'react';\r\n\r\nimport TopHeader from '../../widgets/TopHeader/TopHeader';\r\nimport Footer from '../../widgets/Footer/index.tsx';\r\n\r\nimport background from '../../img/delivery-page-background.png';\r\nimport backgroundMobile from '../../img/delivery-page-background-mobile.png';\r\nimport warningCharacter from '../../img/delivery-page-background-mobile.png';\r\n\r\nimport styles from './styles/delivery.module.scss';\r\n\r\nconst DeliveryPage = () => {\r\n    return (\r\n        <div className={styles.block}>\r\n            <TopHeader/>\r\n            <img className={styles.background} src={document.body.clientWidth > 800 ? background : backgroundMobile} alt=\"\" />\r\n            <div className={`${styles.wrapper} wrapper`}>\r\n                <span className={styles.navLink}><a href='/'>Главная </a> / <a href='/delivery'>доставка и оплката</a></span>\r\n                \r\n                <h2 className={styles.ttl}>доставка</h2>\r\n                <h2 className={styles.secondTtl}>и оплата</h2>\r\n                \r\n                <div className={styles.dearClients}>\r\n                    <span className={styles.warningCharacter}>!</span>\r\n                    <div>\r\n                        <h2 className={styles.pink}>Дорогие клиенты!</h2>\r\n                        <p className={styles.warningParagraph}>\r\n                            Во время пандемии (COVID-19) компания Lover Flower призывает всех меньше контактировать с другими людьми для защиты себя и своих близких. Именно поэтому мы организовали <span className={styles.green}>БЕСКОНТАКТНУЮ ДОСТАВКУ</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <h2 className={styles.additionalTtl}>Способы оплаты:</h2>\r\n                <div className={styles.aditionalOptions}>\r\n                    <div className={styles.option}>\r\n                        <p className={styles.paragraphOption}>\r\n                            БАНКОВСКОЙ КАРТОЙ ПРИ ОФОРМЛЕНИИ ЗАКАЗА ЧЕРЕЗ САЙТ или по ссылке\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.option}>\r\n                        <p className={styles.paragraphOption}>\r\n                            НАЛИЧНЫМИ,  БАНКОВСКОЙ КАРТОЙ ПРИ САМОВЫВОЗЕ или с расчетного счета орагнизации\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.option}>\r\n                        <p className={styles.paragraphOption}>\r\n                            НАЛИЧНЫМИ ПРИ ДОСТАВКЕ КУРЬЕРОМ\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.option}>\r\n                        <p className={styles.paragraphOption}>\r\n                            КРИПТОВАЛЮТОЙ\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <h2 className={styles.seliveryVarTtl}>стоимость доставки:</h2>\r\n                <ul className={styles.deliveryList}>\r\n                    <li className={styles.deliveryListItem}>Бесплатно – при заказе на сумму <span className={styles.green}>от 90 рублей</span></li>\r\n                    <li className={styles.deliveryListItem}>10 рублей – при заказе на сумму <span className={styles.green}>менее 90 рублей</span></li>\r\n                    <li className={styles.deliveryListItem}>\r\n                        Так же вы можете забрать ваш заказ самостоятельно по адресу: <br />\r\n                        <span className={styles.green}>г. Минск, ул. Тимирязева д. 67, комн. 112 ежедневно с 10.00 до 21.00</span>\r\n                    </li>\r\n                </ul>\r\n\r\n                <h2 className={styles.seliveryVarTtl}>Условия доставки:</h2>\r\n                <ul className={styles.deliveryList}>\r\n                    <li className={styles.deliveryListItem}>Доставка осуществляется по городу Минску в пределах МКАД <span className={styles.green}>в любой день</span></li>\r\n                    <li className={styles.deliveryListItem}>Возможность, сроки и стоимость доставки за пределы МКАД, доставки в ночное время, праздники <span className={styles.green}>оговариваются с менеджером</span></li>\r\n                </ul>\r\n\r\n                <div className={styles.additionalBlock}>\r\n                    <h2 className={styles.seliveryVarTtl}>Дополнительно:</h2>\r\n\r\n                    <p className={styles.additionalParagraph}>\r\n                        Доставка иному лицу возможна только в случае оплаты заказа заказчиком. Доставка осуществляется не ранее чем через 2 часа после оплаты заказа, но может быть ранее, \r\n                        если букет есть в наличии либо по договорённости с менеджером.\r\n                    </p>\r\n                    <p className={styles.additionalParagraph}>\r\n                        Время ожидания курьера составляет 15 минут. <br /> В случае если на момент доставки цветов получателя нет либо нет возможности по иным причинам произвести доставку \r\n                        (указан неточный адрес, закрытая входная дверь, контрольно-пропускная система и др.), мы оставляем за собой право по собственному выбору:\r\n                    </p>\r\n\r\n                    <ul className={styles.deliveryList}>\r\n                        <li className={styles.deliveryListItem}>\r\n                            оставить цветы тому, кто открыл дверь;\r\n                        </li>\r\n                        <li className={styles.deliveryListItem}>\r\n                            с заказчиком согласовать повторную доставку, которая дополнительно оплачивается;\r\n                        </li>\r\n                        <li className={styles.deliveryListItem}>\r\n                            отказаться от передачи цветов без возврата денежных средств.\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                    <p className={styles.additionalParagraph}>\r\n                        Если вы либо иной получатель не получили заказ, вам необходимо сообщить об этом менеджеру по телефону <a className={styles.additionalNumber} href='#!'>+375 29 113 69 69.</a>\r\n                    </p>\r\n                    \r\n                    <h2 className={styles.seliveryVarTtl}>Возврат денег:</h2>\r\n                    \r\n                    <p className={styles.additionalParagraph}>\r\n                        При отказе заказчика от заказа в течение двух часов, если заказ ещё не начал готовиться, средства возвращаются в полном объёме. Если же флорист начал подготовку,\r\n                        то заказчик имеет право на возврат 50% стоимости, либо, если ещё не был оплачен, то обязан оплатить 50%.\r\n                    </p>\r\n                    <br />\r\n                    <p className={styles.additionalParagraph}>\r\n                        Цветы надлежащего качества возврату и обмену не подлежат, а если имеются какие-либо недостатки в цветах – возврат производится лишь если эти недостатки не являются\r\n                        природными и естественными изъянами растения. Возврат денежных средств производится незамедлительно на тот счёт, с которого произошла оплата, их же поступление на счёт \r\n                        зависит от платёжной системы.\r\n                    </p>\r\n\r\n                </div>\r\n            \r\n            </div>\r\n\r\n\r\n            {document.body.clientWidth > 800 && <Footer />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeliveryPage;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\AboutUsPage\\AboutUs.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\ContactsPage\\ContactsPage.tsx",["278"],[],"import React from 'react';\r\nimport TopHeader from '../../widgets/TopHeader/TopHeader';\r\nimport Footer from '../../widgets/Footer/index.tsx';\r\nimport background from '../../img/contacts-background.png';\r\nimport backgroundMobile from '../../img/contacts-mobile-background.png';\r\nimport styles from './styles/contactPage.module.scss';\r\nimport HaveQuestionForm from '../../features/HaveQuestionForm/HaveQuestionForm';\r\n\r\nconst ContactsPage = () => {\r\n    return (\r\n        <div className={styles.block}>\r\n            <TopHeader />\r\n                <img className={styles.background} src={document.body.clientWidth > 800 ? background : backgroundMobile} alt=\"background\" />\r\n\r\n                <div className={styles.wrapper}>\r\n                    <span className={styles.navLink}><a href='/'>Главная </a> / <a href='/contacts'>контакты</a></span>\r\n                    <h2 className={styles.mainTtl}>контакты</h2>\r\n\r\n                    <div className={styles.aditionalOptions}>\r\n                        <div className={styles.option}>\r\n                            <h2 className={styles.ttlOption}>время работы</h2>\r\n                            <p className={styles.paragraphOption}>\r\n                                с 10:00 до 21:00 без выходных\r\n                            </p>\r\n                        </div>\r\n                        <div className={styles.option}>\r\n                            <h2 className={styles.ttlOption}>Адрес</h2>\r\n                            <p className={styles.paragraphOption}>\r\n                                г. Минск, ул. Тимирязева 67, комн. 112\r\n                            </p>\r\n                        </div>\r\n                        <div className={styles.option}>\r\n                            <h2 className={styles.ttlOption}>Телефон</h2>\r\n                            <p className={styles.paragraphOption}>\r\n                                +375 (29) 113-69-69\r\n                            </p>\r\n                        </div>\r\n                        <div className={styles.option}>\r\n                            <h2 className={styles.ttlOption}>E-mail</h2>\r\n                            <p className={styles.paragraphOption}>\r\n                                zakaz@loverflower.by\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles.sendUsBlock}>\r\n                        <div className={styles.ttls}>\r\n                            <h2 className={styles.sendUsFirstTtl}>напишите</h2>\r\n                            <h2 className={styles.sendUsSecondTtl}>нам</h2>\r\n                        </div>\r\n                        <div className={styles.sendRequestBlock}>\r\n                            <p className={styles.sendRequestParagraph}>\r\n                                Отправьте ваш вопрос, заказ, предложение или жалобу через форму обратной \r\n                                связи, и наш специалист свяжется с вами в течение 15 минут.\r\n                            </p>\r\n                            <HaveQuestionForm />\r\n                        </div>\r\n                    </div>\r\n                    <h2 className={styles.mapTtl}>Мы на карте</h2>\r\n                    <iframe className={styles.map} src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2349.351187614965!2d27.509104182623993!3d53.92550442900918!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x46dbc56c6ea920cb%3A0x8c0a1b9140de5cd8!2sTeachMeSkills!5e0!3m2!1sru!2sfr!4v1698740900591!5m2!1sru!2sfr\" allowFullScreen loading=\"lazy\" referrerPolicy=\"no-referrer-when-downgrade\"></iframe>\r\n                </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactsPage;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\FAQPage\\FAQPage.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Medias\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\shared\\Logo\\Logo.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CatalogAbout\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\DescriptionBlock\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\PopularFlowers\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\SliderCart\\index.tsx",["279","280"],[],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addProduct } from '../../redux/slices/Busket.js';\r\nimport styles from './styles/slidercart.module.scss';\r\n\r\ntype CartType = {\r\n    id: number,\r\n    img: string,\r\n    ttl: string,\r\n    cost: string,\r\n}\r\n\r\nconst Index = ({id, img, ttl, cost}: CartType) => {\r\n    const dispatch = useDispatch();\r\n\r\n    function updateStore(event: React.MouseEvent<HTMLButtonElement>) {\r\n        const productInformData = { id, cost, ttl, count: 1 }\r\n\r\n        if (!event.currentTarget.classList.contains('btnDisabled')) {\r\n            event.currentTarget.classList.add('btnDisabled')\r\n\r\n            localStorage.BusketInform = JSON.stringify(JSON.parse(localStorage.BusketInform).concat(productInformData));\r\n            dispatch(addProduct(productInformData));\r\n        }\r\n\r\n    }\r\n\r\n    const [disabled, setDisabled] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (JSON.parse(localStorage.BusketInform).some((obj: any) => obj.id === id)) {\r\n            setDisabled(true)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.block} id={`${id}`}>\r\n            <a href={`/catalog/:${id}`}>\r\n                <img className={styles.img} src={img} alt=\"img\" />\r\n                <h2 className={styles.ttl}>{ttl}</h2>\r\n                <h2 className={styles.cost}>{cost}</h2>\r\n            </a>    \r\n            <button className={`whiteBtn ${disabled && 'btnDisabled'}`} onClick={updateStore}>В корзину</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HowMakeOrder\\HowMakeOrder.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\SpecialOccassion\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Footer\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HaveQuestions\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\InstaBlock\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Busket.js",["281"],[],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { useEffect } from 'react';\r\n\r\nconst BusketSlice = createSlice({\r\n    name: 'Busket',\r\n    initialState: {\r\n        value: [],\r\n    },\r\n    reducers: {\r\n        updateStore(state, store) {\r\n            state.value = store.payload;\r\n        },\r\n        addProduct(state, obj) {\r\n            state.value.push(obj.payload);\r\n        },\r\n        removeProduct (state, id) {\r\n            state.value = state.value.filter(product => product.id !== id.payload)\r\n        },\r\n        countPlus (state, id) {\r\n            state.value = state.value.map(product => {\r\n                if (product.id !== id.payload) {\r\n                    return product;\r\n                } else {\r\n                    product.count++;\r\n                    return product;\r\n                }\r\n            })\r\n        },\r\n        countMinus (state, id) {\r\n            state.value = state.value.map(product => {\r\n                if (product.id !== id.payload) {\r\n                    return product;\r\n                } else {\r\n                    product.count--;\r\n                    return product;\r\n                }\r\n            })\r\n        }\r\n    },\r\n})\r\n\r\nexport const { updateStore, addProduct, removeProduct, countPlus, countMinus} = BusketSlice.actions\r\n\r\nexport default BusketSlice.reducer;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Basket\\index.tsx",["282"],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\OrderCall\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HeroSection\\HeroSection.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Header\\index.tsx",["283","284","285","286"],[],"import React from 'react';\r\nimport styles from './style/Header.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../../shared/Logo/Logo';\r\nimport Medias from '../../widgets/Medias/index.tsx';\r\nimport Busket from '../../features/Basket/index.tsx';\r\n\r\nimport burgerTrigger from '../../img/burger.svg';\r\nimport cross from '../../img/cross.svg';\r\nimport Search from '../../features/Search/Search';\r\n\r\nconst Index = () => {\r\n    const [disabled, setDisabled] = React.useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        setDisabled(!disabled)\r\n    }\r\n    return (\r\n        <header className={`${styles.header} flex justify-between items-start `}>\r\n            {document.body.clientWidth > 800 &&\r\n                <Link to='/'><Logo /></Link>\r\n            }\r\n\r\n            <div className={styles.mobileNav}>\r\n                <img className={styles.trigger} src={burgerTrigger} alt=\"burgerTrigger\" onClick={toggleMenu}/>\r\n                <div className={`${styles.mobileBlock} ${disabled && styles.mobileBlockActive}`}>\r\n                    <img className={styles.cross} src={cross} alt=\"cross\" onClick={toggleMenu}/>\r\n                    \r\n                    <Link to='/'><Logo /></Link>\r\n                    <nav className={`${styles.mobileList}`}>\r\n                        <ul className={`${styles.navigationList} flex justify-between`}>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/'>Главная</a></li>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='../../pages/Catalog/Catalog.tsx'>Каталог</a></li>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/delivery'>Доставка и оплата</a></li>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/aboutUs'>О нас</a></li>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/contacts'>Контакты</a></li>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/questions'>FAQ</a></li>\r\n                        </ul>\r\n                    </nav>\r\n\r\n                    <div className={styles.mobileContacts}>\r\n                        <a className='uppercase Oswald400 green' href=\"#!\">zakaz@loverflower.by</a>\r\n                        <h2 className={`${styles.delivery} Oswald300 gray`}>Доставка 24/7 по договоренности с оператором</h2>\r\n                        <h2 className={`${styles.street} Oswald400 green`}>ул. Тимирязева 67</h2>\r\n                        <h2 className={`${styles.time} Oswald300 gray`}>10:00 до 21:00<br/> без выходных</h2>\r\n                        <a className={styles.policy} href=\"\">Политика конфиденциальности</a>\r\n                        <a className={`${styles.policy} Oswald400`} href=\"\">Обработка персональных данных</a>\r\n                        <a className={`${styles.number} Oswald400 green`} href=\"#!\">+375 (29) 113-69-69</a>\r\n                        <Medias />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <nav className={`${styles.nav}`}>\r\n                <ul className={`${styles.navigationList} flex justify-between`}>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/catalog'>Каталог</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/delivery'>Доставка и оплата</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/aboutUs'>О нас</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/contacts'>Контакты</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/questions'>FAQ</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href=''></a> Каталог</li>\r\n                </ul>\r\n            </nav>\r\n\r\n            <Search />\r\n\r\n            <div className={`${styles.contactBlock} `}> \r\n                <a className='uppercase Oswald400 green' href=\"#!\">zakaz@loverflower.by</a>\r\n                <h2 className={`${styles.delivery} Oswald300 gray`}>Доставка 24/7 по договоренности с оператором</h2>\r\n                <h2 className={`${styles.street} Oswald400 green`}>ул. Тимирязева 67</h2>\r\n                <h2 className={`${styles.time} Oswald300 gray`}>10:00 до 21:00<br/> без выходных</h2>\r\n                <Medias />\r\n                <a className={`${styles.number} Oswald400 green`} href=\"#!\">+375 (29) 113-69-69</a>\r\n                <Busket />\r\n            </div> \r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Index;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\TopHeader\\TopHeader.tsx",["287","288","289"],[],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Logo from '../../shared/Logo/Logo';\r\nimport Busket from '../../features/Basket/index.tsx';\r\nimport Medias from '../../widgets/Medias/index.tsx';\r\n\r\nimport text from '../../img/header-text.png';\r\nimport cross from '../../img/cross.svg';\r\nimport burgerTrigger from '../../img/burger.svg';\r\n\r\nimport styles from './style/TopHeader.module.scss';\r\nimport Search from '../../features/Search/Search';\r\n\r\n\r\nconst TopHeader = () => {\r\n    const [disabled, setDisabled] = React.useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        setDisabled(!disabled)\r\n    }\r\n    return (\r\n        <div className={styles.header}>\r\n            {document.body.clientWidth > 800 && <Logo></Logo>}\r\n            {document.body.clientWidth < 800 && \r\n                <div className={styles.mobileNav}>\r\n                    <img className={styles.trigger} src={burgerTrigger} alt=\"burgerTrigger\" onClick={toggleMenu}/>\r\n                    <div className={`${styles.mobileBlock} ${disabled && styles.mobileBlockActive}`}>\r\n                        <img className={styles.cross} src={cross} alt=\"cross\" onClick={toggleMenu}/>\r\n                        \r\n                        <Logo />\r\n                        <nav className={`${styles.mobileList}`}>\r\n                            <ul className={`${styles.navigationList} flex justify-between`}>\r\n                                <Search />\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/'>Главная</a></li>\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/catalog'>Каталог</a></li>\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/delivery'>Доставка и оплата</a></li>\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/aboutUs'>О нас</a></li>\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/contacts'>Контакты</a></li>\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/questions'>FAQ</a></li>\r\n                            </ul>\r\n                        </nav>\r\n\r\n                        <div className={styles.mobileContacts}>\r\n                            <a className='uppercase Oswald400 green' href=\"#!\">zakaz@loverflower.by</a>\r\n                            <h2 className={`${styles.delivery} Oswald300 gray`}>Доставка 24/7 по договоренности с оператором</h2>\r\n                            <h2 className={`${styles.street} Oswald400 green`}>ул. Тимирязева 67</h2>\r\n                            <h2 className={`${styles.time} Oswald300 gray`}>10:00 до 21:00<br/> без выходных</h2>\r\n                            <a className={styles.policy} href=\"\">Политика конфиденциальности</a>\r\n                            <a className={`${styles.policy} Oswald400`} href=\"\">Обработка персональных данных</a>\r\n                            <a className={`${styles.number} Oswald400 green`} href=\"#!\">+375 (29) 113-69-69</a>\r\n                            <Medias />\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            }\r\n            <img className={styles.text} src={text} alt=\"text\" />\r\n            <nav className={`${styles.nav}`}>\r\n                <ul className={`${styles.navigationList} flex justify-between`}>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/catalog'>Каталог</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/delivery'>Доставка и оплата</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/aboutUs'>О нас</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/contacts'>Контакты</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/questions'>FAQ</a></li>\r\n                </ul>\r\n            </nav>\r\n\r\n            {document.body.clientWidth > 800 && <Search />}\r\n\r\n            <a className={`${styles.number} Oswald400 green`} href=\"#!\">+375 (29) 113-69-69</a>\r\n            <Busket />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopHeader;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Search\\Search.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\TypeOfFlower\\TypeOfFlower.tsx",["290","291"],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CatalogHeroSection\\CatalogHero.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\NotFound\\NotFound.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\TypeOfFlower\\api\\getRequest.ts",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Products.js",[],[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductsList\\ProductsList.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductsList\\api\\api.ts",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortBy\\SortBy.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\ProductTypes.js",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortBy\\api\\api.ts",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Params.js",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortByProps\\SortByProps.tsx",["292"],[],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pushParam, popParam } from '../../redux/slices/Params';\r\nimport { update } from '../../redux/slices/Products';\r\nimport styles from './styles/SortByProps.module.scss';\r\nimport getCurrentProducts from './api/getProducts.js';\r\n\r\nconst SortByProps = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm()\r\n\r\n    const sendProps = () => {};\r\n\r\n    const filters = [\r\n        {ttl: 'ПО СВЕТУ', name: 'light', variants: ['нежные', 'яркие']},\r\n        {ttl: 'ПО ЦВЕТУ', name: 'cost', variants: ['белый', 'желтый', 'зеленый', 'красный', 'оранжевый', 'розовый', 'синий']},\r\n        {ttl: 'ПО ФОРМАТУ', name: 'format', variants: ['букет', 'в вазе', 'в конверте', 'в корзине', 'в шляпной коробке', 'в ящике']},\r\n        {ttl: 'СТОИМОСТЬ', name: 'Cost', variants: ['нежные', 'нежные']},\r\n        {ttl: 'ПО ЦВЕТКУ', name: 'flowers', variants: ['Альстромерия', 'Астильба', 'Альстромерия', 'Астильба', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Альстромерия']},\r\n    ]\r\n\r\n    // Redux state\r\n    const types = useSelector((state: any) => state.prodTypes);\r\n    const sortBy = useSelector((state: any) => state.sortby);\r\n    const props = useSelector((state: any) => state.Params);\r\n\r\n    React.useEffect(() => {\r\n        const obj = { types, sortBy, props };\r\n\r\n        // Make request\r\n        try {\r\n            getCurrentProducts(obj)\r\n            .then((res: any) => {\r\n                dispatch(update(res));\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }, [props])\r\n    \r\n    const updateParams = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event?.currentTarget.previousElementSibling?.classList.toggle(styles.active);\r\n\r\n        // take targetElem props\r\n        const name = event?.currentTarget.name;\r\n        const inputValue = event?.currentTarget.nextElementSibling?.innerHTML;\r\n        \r\n        // UPD State for Params\r\n        if (event?.currentTarget.previousElementSibling?.classList.contains(styles.active)) {\r\n            dispatch(pushParam({[name]: inputValue}))\r\n        } else {\r\n            dispatch(popParam({[name]: inputValue}))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className={styles.block} onSubmit={handleSubmit(sendProps)}>\r\n        {filters.map(topic => {\r\n            return (\r\n                <div className=\"\">\r\n                    <h2 className={styles.title}>{topic.ttl}</h2>\r\n                    <div className={styles.inputs}>\r\n                        {topic.variants.map((vari) => {\r\n                            return (\r\n                                <label className={styles.label}>\r\n                                    <div className={styles.fakeCheckbox}></div>\r\n                                    <input className={styles.checkbox} type={'checkbox'} {...register(`${topic.name}`, { onChange: updateParams })}/>\r\n                                    <span className={styles.inputText}>{vari}</span>\r\n                                </label>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SortByProps;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\SortBy.js",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortByProps\\api\\getProducts.js",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\ProductSnippet\\ProductSnippet.tsx",["293"],[],"import React from 'react';\r\nimport styles from './styles/sroductSnippet.module.scss';\r\nimport img from '../../img/second-product-img.png';\r\nimport { useDispatch } from 'react-redux';\r\nimport { countPlus, countMinus, removeProduct, } from '../../redux/slices/Busket.js';\r\n\r\ntype Product = {\r\n    id: number,\r\n    cost: number,\r\n    count: number,\r\n    ttl: string,\r\n};\r\n\r\nconst ProductSnippet = ({cost, count, ttl, id}: Product) => {\r\n    const dispatch = useDispatch();\r\n    let [choosedCount, setChoosedCount] = React.useState(count);\r\n\r\n    function updateState() {\r\n        const result = JSON.parse(localStorage.BusketInform).filter((obj: Product) => {\r\n            if (id !== obj.id) {\r\n                return obj;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('BusketInform', JSON.stringify(result));\r\n        dispatch(removeProduct(id));\r\n    };\r\n\r\n    function chooseCount(event: React.MouseEvent<HTMLButtonElement>) {\r\n        if (event.currentTarget.innerText === '+') {\r\n            setChoosedCount(choosedCount += 1);\r\n            dispatch(countPlus(id));\r\n        } else if (choosedCount > 1) { \r\n            setChoosedCount(choosedCount -= 1);\r\n            dispatch(countMinus(id));\r\n        };\r\n\r\n        const choosedLocal = JSON.parse(localStorage.BusketInform).map((elem: Product) => {\r\n            if (elem.id === id) {\r\n                elem.count = choosedCount;\r\n            };\r\n            return elem;\r\n        });\r\n\r\n        localStorage.setItem('BusketInform', JSON.stringify(choosedLocal));\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.block}>\r\n            <div className={styles.firstBlock}>\r\n                <img className={styles.img} src={img} alt=\"\" />\r\n                <div>\r\n                    <h2 className={styles.productTtl}>{ttl}</h2>\r\n                    <div className={styles.counter}>\r\n                        <button className={styles.minus} onClick={chooseCount}>–</button>\r\n                        <div className={styles.count}>{count}</div>\r\n                        <button className={styles.plus} onClick={chooseCount}>+</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.costBlokc}>\r\n                <h2 className={styles.cost}>{cost} ₽</h2>\r\n                <h2 className={styles.remove} onClick={updateState}>Удалить</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductSnippet;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\CorporativeClients\\CorporativeClients.tsx",["294"],[],"import React from 'react';\r\nimport TopHeader from '../../widgets/TopHeader/TopHeader.tsx';\r\nimport Footer from '../../widgets/Footer/index.tsx';\r\n\r\nimport styles from './styles/corporativClients.module.scss';\r\nimport background from '../../img/corporative-client-background.png';\r\nimport backgroundMobile from '../../img/corporative-client-background-mobile.png';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst CorporativeClients = () => {\r\n    const {\r\n        control,\r\n        formState: {\r\n            errors\r\n        },\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n    } = useForm({\r\n        mode: 'onBlur',\r\n    })\r\n\r\n    function sendOrder(data: any) {\r\n        \r\n        fetch('http://localhost:5000/api/corporative-clients', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response: any) => response.json())\r\n        .then((result: any) => console.log(result))\r\n        .catch((err: any) => {\r\n            console.log(err);\r\n        }); \r\n\r\n        reset();\r\n    }\r\n    return (\r\n        <div className={styles.block}>\r\n            <TopHeader />\r\n            <img className={styles.background} src={document.body.clientWidth > 800 ? background : backgroundMobile} alt=\"background\" />\r\n\r\n            <div className={styles.wrapper}>\r\n                <span className={styles.navLink}><a href='/'>Главная </a> / <a href='/corporative-clients'>корпоративным клиентам</a></span>\r\n\r\n                <h2 className={styles.ttl}>Букеты</h2>\r\n                <h2 className={styles.subttl}>поздравления для</h2>\r\n                <h2 className={styles.subTtlSecond}>Ваших работников</h2>\r\n\r\n                <p className={styles.askParagraph}>\r\n                    Если у Вас большое количество сотрудников (или не очень) и вы устали помнить о каждом их Дне рождении и как чем поздравить, то<span className={styles.green}> мы можем делать это за Вас.</span>\r\n                </p>\r\n\r\n                <div className={styles.description}>\r\n                    <p className={styles.descriptionParagraph}>\r\n                        Одним вариантом сотрудничества является предоставление нам перечня сотрудников с Днями их рождений и мы уже самостоятельно связываемся с каждым, изготавливаем букет либо композицию и \r\n                        доставляем в удобное время сотруднику либо по месту работы либо по месту жительства, так как в настоящее время многие сотрудники продолжают выполнять работу удалённо либо находятся на \r\n                        больничном или в отпуске. \r\n                    </p>\r\n                    <p className={styles.descriptionParagraph}>\r\n                        Другим вариантом сотрудничества является заказ букетов самостоятельно представителем организации за день до нужной даты.\r\n                    </p>\r\n                    <p className={styles.descriptionParagraph}>\r\n                        Так вы <span className={styles.green}>экономите время</span> остальных сотрудников на сбор денег на поиск подарка и доставку его получателю, а также оберегаете себя от риска пропустить кого-либо из важных организации людей, \r\n                        а именно так Вы проявляете заботу и внимание к сотрудникам для того, чтобы и к делам Вашей организации они относились со всей внимательностью и также не пропускали важные дни.\r\n                    </p>\r\n                </div>\r\n\r\n                <h2 className={styles.chooseTtl}>Букеты могут изготавливаться в фирменном цвете организации и есть возможность делать поздравления на Вашей фирменной открытке, которую мы можем изготовить сами.</h2>\r\n            \r\n                <h2 className={styles.chooseSubttl}>Стоимость одного букета не менее 60 рублей.</h2>\r\n\r\n                <div className={styles.grid}>\r\n                    <div className={styles.gridItem}>\r\n                        <h2 className={`${styles.gridItemTtl} ${styles.green}`}>\r\n                        Количество заявок в месяц\r\n                        </h2>\r\n                    </div>\r\n                    <div className={styles.gridItem}>\r\n                        <h2 className={`${styles.gridItemTtl} ${styles.green}`}>\r\n                        Приятные бонусы\r\n                        </h2>\r\n                    </div>\r\n                    <div className={styles.gridItem}>\r\n                        <h2 className={styles.gridItemTtl}>\r\n                        1-2\r\n                        </h2>\r\n                    </div>\r\n                    <div className={styles.gridItem}>\r\n                        <h2 className={styles.gridItemTtl}>\r\n                        Стоимость одной доставки по Минску – 10 рублей, за пределы МКАД – от 20 рублей\r\n                        </h2>\r\n                    </div>\r\n                    <div className={styles.gridItem}>\r\n                        <h2 className={styles.gridItemTtl}>\r\n                        3-10\r\n                        </h2>\r\n                    </div>\r\n                    <div className={styles.gridItem}>\r\n                        <h2 className={styles.gridItemTtl}>\r\n                        Доставка бесплатно <br />\r\n                        Букет-подарок руководителю в его День рождения\r\n                        </h2>\r\n                    </div>\r\n                    <div className={styles.gridItem}>\r\n                        <h2 className={styles.gridItemTtl}>\r\n                        Более 10\r\n                        </h2>\r\n                    </div>\r\n                    <div className={styles.gridItem}>\r\n                        <h2 className={styles.gridItemTtl}>\r\n                        Доставка бесплатно <br />\r\n                        Букет-подарок руководителю в его День рождения <br />\r\n                        Праздничная ель перед Новым годом\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.workSteps}>\r\n                    <div>\r\n                        <h2 className={styles.workStepsTtl}>этапы работы:</h2>\r\n\r\n                        <ol className={styles.workList}>\r\n                            <li className={styles.workStep}>1. Заполнение заявки</li>\r\n                            <li className={styles.workStep}>2. Подписание договора</li>\r\n                            <li className={styles.workStep}>3. Вручение цветов</li>\r\n                            <li className={styles.workStep}>4. Отчет о доставленных заказах</li>\r\n                            <li className={styles.workStep}>5. оплата</li>\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n\r\n                <h2 className={styles.chooseTtl}>Если у Вас единичный заказ, то можете выбрать букет в каталоге либо заказать индивидуальный букет и указать его стоимость, а при оформлении заказа в корзине указать, что оплата будет производиться с расчётного счёта организации.</h2>\r\n            \r\n                <h2 className={styles.formTtl}>заполните заявку:</h2>\r\n\r\n                <form className={styles.form} onSubmit={handleSubmit(sendOrder)}>\r\n                    <div>\r\n                        <h2 className={styles.inputTtl}>Наименование организации</h2>\r\n                        <input className={`input ${errors?.organisationName && 'wrongValue'}`} placeholder='Введите наименование вашей организации' {...register(\"organisationName\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.organisationName && <h2 className='errorMessage'>Введите правильно название фирмы</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Почтовый адрес</h2>\r\n                        <input className={`input ${errors?.mailIndex && 'wrongValue'}`} placeholder='Введите почтовый адрес' {...register(\"mailIndex\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^\\d{5}(?:[-\\s]\\d{4})?$/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.mailIndex && <h2 className='errorMessage'>Введите правильно почт индекс</h2>}\r\n                        \r\n                        <h2 className={styles.inputTtl}>Контактное лицо</h2>\r\n                        <input className={`input ${errors?.contactPerson && 'wrongValue'}`} placeholder='Введите имя контактного лица' {...register(\"contactPerson\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.contactPerson && <h2 className='errorMessage'>Введите правильно контактное лицо</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Контактный номер телефона</h2>\r\n                        <input className={`input ${errors?.contactNumber && 'wrongValue'}`} placeholder='+7 (977) 777-77-77' {...register(\"contactNumber\", {\r\n                            required: 'Поле имя є обов\\'язковим',\r\n                            pattern: {\r\n                                value: /^\\+\\d{10}$/,\r\n                                message: 'поле имя необходимо заполнить видом +7990000000'\r\n                            }\r\n                        })}/>\r\n                        {errors?.contactNumber && <h2 className='errorMessage'>поле имя необходимо заполнить видом +7990000000</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Стоимость букета сотруднику (если разная – указать)</h2>\r\n                        <input className={`input ${errors?.busketAmount && 'wrongValue'}`} placeholder='Укажите стоимость букета сотруднику' {...register(\"busketAmount\", {\r\n                            required: true,\r\n                        })}/>\r\n                        {errors?.busketAmount && <h2 className='errorMessage'>Введите стоимость</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Адрес электронной почты</h2>\r\n                        <input className={`input ${errors?.emailAdress && 'wrongValue'}`} placeholder='Укажите ваш адрес электронной почты' {...register(\"emailAdress\", {\r\n                            required: 'Поле имя є обов\\'язковим',\r\n                            pattern: {\r\n                                value: /^\\S+@\\S+\\.\\S+$/,\r\n                                message: 'Будь ласка, введіть правильний адресу електронної пошти'\r\n                            }\r\n                        })}/>\r\n                        {errors?.emailAdress && <h2 className='errorMessage'>Будь ласка, введіть правильний адресу електронної пошти</h2>}\r\n\r\n                        {document.body.clientWidth < 800 && <div>\r\n                        <h2 className={styles.inputTtl}>Введите УНП</h2>\r\n                        <input className={`input ${errors?.YNP && 'wrongValue'}`} placeholder='УНП' {...register(\"YNP\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /#\\d{6}/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.YNP && <h2 className='errorMessage'>Введите УНП</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Расчетный счет</h2>\r\n                        <input className={`input ${errors?.currentAccount && 'wrongValue'}`} placeholder='Введите номер расчетного счета' {...register(\"currentAccount\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.currentAccount && <h2 className='errorMessage'>Введите pасчетный счет</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Код банка</h2>\r\n                        <input className={`input ${errors?.bankCode && 'wrongValue'}`} placeholder='Код банка' {...register(\"bankCode\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.bankCode && <h2 className='errorMessage'>Введите код банка</h2>}\r\n            \r\n                        <h2 className={styles.inputTtl}>Предполагаемое количество заявок в месяц</h2>\r\n                        <input className={`input ${errors?.countOfOrders && 'wrongValue'}`} placeholder='Введите предполагаемое количество заявок в месяц' {...register(\"countOfOrders\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.countOfOrders && <h2 className='errorMessage'>Введите предполагаемое количество заявок в месяц</h2>}\r\n\r\n                    </div>}\r\n\r\n                        <button className='greenBtn'>отправить</button>\r\n                    </div>\r\n\r\n\r\n                        {document.body.clientWidth > 800 && <div>\r\n                        <h2 className={styles.inputTtl}>Введите УНП</h2>\r\n                        <input className={`input ${errors?.YNP && 'wrongValue'}`} placeholder='УНП' {...register(\"YNP\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /#\\d{6}/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.YNP && <h2 className='errorMessage'>Введите УНП</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Расчетный счет</h2>\r\n                        <input className={`input ${errors?.currentAccount && 'wrongValue'}`} placeholder='Введите номер расчетного счета' {...register(\"currentAccount\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.currentAccount && <h2 className='errorMessage'>Введите pасчетный счет</h2>}\r\n\r\n                        <h2 className={styles.inputTtl}>Код банка</h2>\r\n                        <input className={`input ${errors?.bankCode && 'wrongValue'}`} placeholder='Код банка' {...register(\"bankCode\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.bankCode && <h2 className='errorMessage'>Введите код банка</h2>}\r\n            \r\n                        <h2 className={styles.inputTtl}>Предполагаемое количество заявок в месяц</h2>\r\n                        <input className={`input ${errors?.countOfOrders && 'wrongValue'}`} placeholder='Введите предполагаемое количество заявок в месяц' {...register(\"countOfOrders\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^[А-Яа-яЁё\\s]+$/,\r\n                                message: 'Введите правильно название фирмы'\r\n                            }\r\n                        })}/>\r\n                        {errors?.countOfOrders && <h2 className='errorMessage'>Введите предполагаемое количество заявок в месяц</h2>}\r\n\r\n                    </div>}\r\n                </form>\r\n                <p className={styles.policy}>\r\n                    Нажимая  на кнопку «Отправить», я даю свое согласие на обработку персональных данных, в соответствии c <Link className={styles.link} to='/'>Политикой конфиденциальности</Link>\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CorporativeClients;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Rating\\Rating.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ReviewBlock\\ReviewBlock.tsx",["295"],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\HaveQuestionForm\\HaveQuestionForm.tsx",[],[],{"ruleId":"296","severity":1,"message":"297","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":20},{"ruleId":"296","severity":1,"message":"300","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":14},{"ruleId":"296","severity":1,"message":"301","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":19},{"ruleId":"296","severity":1,"message":"302","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":22},{"ruleId":"296","severity":1,"message":"303","line":22,"column":10,"nodeType":"298","messageId":"299","endLine":22,"endColumn":17},{"ruleId":"296","severity":1,"message":"304","line":23,"column":8,"nodeType":"298","messageId":"299","endLine":23,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":74,"column":8,"nodeType":"307","endLine":74,"endColumn":10,"suggestions":"308"},{"ruleId":"305","severity":1,"message":"306","line":104,"column":8,"nodeType":"307","endLine":104,"endColumn":10,"suggestions":"309"},{"ruleId":"296","severity":1,"message":"310","line":27,"column":11,"nodeType":"298","messageId":"299","endLine":27,"endColumn":20},{"ruleId":"305","severity":1,"message":"311","line":50,"column":8,"nodeType":"307","endLine":50,"endColumn":10,"suggestions":"312"},{"ruleId":"296","severity":1,"message":"313","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":24},{"ruleId":"314","severity":1,"message":"315","line":60,"column":21,"nodeType":"316","endLine":60,"endColumn":400},{"ruleId":"296","severity":1,"message":"317","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":35,"column":8,"nodeType":"307","endLine":35,"endColumn":10,"suggestions":"318"},{"ruleId":"319","severity":1,"message":"320","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":19},{"ruleId":"305","severity":1,"message":"321","line":26,"column":25,"nodeType":"322","endLine":26,"endColumn":62},{"ruleId":"323","severity":1,"message":"324","line":46,"column":25,"nodeType":"316","endLine":46,"endColumn":62},{"ruleId":"323","severity":1,"message":"324","line":47,"column":25,"nodeType":"316","endLine":47,"endColumn":77},{"ruleId":"325","severity":1,"message":"326","line":61,"column":102,"nodeType":"316","endLine":61,"endColumn":113},{"ruleId":"323","severity":1,"message":"324","line":61,"column":102,"nodeType":"316","endLine":61,"endColumn":113},{"ruleId":"296","severity":1,"message":"317","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":14},{"ruleId":"323","severity":1,"message":"324","line":49,"column":29,"nodeType":"316","endLine":49,"endColumn":66},{"ruleId":"323","severity":1,"message":"324","line":50,"column":29,"nodeType":"316","endLine":50,"endColumn":81},{"ruleId":"296","severity":1,"message":"327","line":3,"column":8,"nodeType":"298","messageId":"299","endLine":3,"endColumn":19},{"ruleId":"305","severity":1,"message":"328","line":32,"column":8,"nodeType":"307","endLine":32,"endColumn":15,"suggestions":"329"},{"ruleId":"305","severity":1,"message":"330","line":44,"column":8,"nodeType":"307","endLine":44,"endColumn":15,"suggestions":"331"},{"ruleId":"332","severity":1,"message":"333","line":19,"column":84,"nodeType":"334","messageId":"335","endLine":19,"endColumn":86},{"ruleId":"296","severity":1,"message":"336","line":14,"column":9,"nodeType":"298","messageId":"299","endLine":14,"endColumn":16},{"ruleId":"332","severity":1,"message":"337","line":39,"column":109,"nodeType":"334","messageId":"335","endLine":39,"endColumn":111},"@typescript-eslint/no-unused-vars","'ProductsList' is defined but never used.","Identifier","unusedVar","'SortBy' is defined but never used.","'SortByProps' is defined but never used.","'PopularFlowers' is defined but never used.","'useForm' is defined but never used.","'Rating' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["338"],["339"],"'sendProps' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["340"],"'warningCharacter' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Link' is defined but never used.",["341"],"no-unused-vars","'useEffect' is defined but never used.","Assignments to the 'addedPeoducts' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","CallExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'getProducts' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'props', and 'sortBy'. Either include them or remove the dependency array.",["342"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'sortBy', and 'types'. Either include them or remove the dependency array.",["343"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'control' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.",{"desc":"344","fix":"345"},{"desc":"344","fix":"346"},{"desc":"347","fix":"348"},{"desc":"344","fix":"349"},{"desc":"350","fix":"351"},{"desc":"350","fix":"352"},"Update the dependencies array to be: [id]",{"range":"353","text":"354"},{"range":"355","text":"354"},"Update the dependencies array to be: [dispatch]",{"range":"356","text":"357"},{"range":"358","text":"354"},"Update the dependencies array to be: [dispatch, props, sortBy, types]",{"range":"359","text":"360"},{"range":"361","text":"360"},[2175,2177],"[id]",[3235,3237],[1595,1597],"[dispatch]",[1116,1118],[1285,1292],"[dispatch, props, sortBy, types]",[1775,1782]]