[{"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\index.tsx":"1","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\app\\App.tsx":"2","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\store\\index.ts":"3","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\Home\\Home.tsx":"4","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\Catalog\\Catalog.tsx":"5","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\ProductPage\\ProductPage.tsx":"6","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\OrderPage\\OrderPage.tsx":"7","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\PaySuccess\\PaySuccess.tsx":"8","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\PayWrong\\PayWrong.tsx":"9","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\DeliveryPage\\DeliveryPage.tsx":"10","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\AboutUsPage\\AboutUs.tsx":"11","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\ContactsPage\\ContactsPage.tsx":"12","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\FAQPage\\FAQPage.tsx":"13","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Medias\\index.tsx":"14","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\shared\\Logo\\Logo.tsx":"15","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CatalogAbout\\index.tsx":"16","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\DescriptionBlock\\index.tsx":"17","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\PopularFlowers\\index.tsx":"18","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\SliderCart\\index.tsx":"19","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HowMakeOrder\\HowMakeOrder.tsx":"20","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\SpecialOccassion\\index.tsx":"21","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Footer\\index.tsx":"22","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HaveQuestions\\index.tsx":"23","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\InstaBlock\\index.tsx":"24","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Busket.js":"25","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Basket\\index.tsx":"26","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\OrderCall\\index.tsx":"27","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HeroSection\\HeroSection.tsx":"28","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Header\\index.tsx":"29","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\TopHeader\\TopHeader.tsx":"30","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Search\\Search.tsx":"31","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\TypeOfFlower\\TypeOfFlower.tsx":"32","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CatalogHeroSection\\CatalogHero.tsx":"33","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\NotFound\\NotFound.tsx":"34","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\TypeOfFlower\\api\\getRequest.ts":"35","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Products.js":"36","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductsList\\ProductsList.tsx":"37","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductsList\\api\\api.ts":"38","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortBy\\SortBy.tsx":"39","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\ProductTypes.js":"40","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortBy\\api\\api.ts":"41","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Params.js":"42","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortByProps\\SortByProps.tsx":"43","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\SortBy.js":"44","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortByProps\\api\\getProducts.js":"45","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\ProductSnippet\\ProductSnippet.tsx":"46","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\CorporativeClients\\CorporativeClients.tsx":"47","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Rating\\Rating.tsx":"48","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ReviewBlock\\ReviewBlock.tsx":"49","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\HaveQuestionForm\\HaveQuestionForm.tsx":"50","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CatalogRange\\CatalogRange.tsx":"51","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ContactsAdOptions\\ContactsAdOptions.tsx":"52","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ContactsSendBlock\\ContactsSendBlock.tsx":"53","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\FAQBlock\\FAQBlock.tsx":"54","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductAbout\\ProductAbout.tsx":"55","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductSwitchOptions\\ProductSwitch.tsx":"56","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Slider\\Slider.tsx":"57","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\AdditionalToOrder\\AditionalToOrder.tsx":"58","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\OrderForm\\OrderForm.tsx":"59","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\OrderedProducts\\OrderedProducts.tsx":"60","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\DeliveryPageMain\\DeliveryMain.tsx":"61","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CorporativeClientsMain\\CorporativeClientsMain.tsx":"62","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\CorporativeClientsForm\\CorporativeClientsForm.tsx":"63"},{"size":335,"mtime":1690803112812,"results":"64","hashOfConfig":"65"},{"size":1936,"mtime":1703504160526,"results":"66","hashOfConfig":"65"},{"size":488,"mtime":1695910539634,"results":"67","hashOfConfig":"65"},{"size":959,"mtime":1704096339799,"results":"68","hashOfConfig":"65"},{"size":387,"mtime":1704098408229,"results":"69","hashOfConfig":"65"},{"size":1020,"mtime":1704109538016,"results":"70","hashOfConfig":"65"},{"size":1425,"mtime":1704205706228,"results":"71","hashOfConfig":"65"},{"size":1376,"mtime":1697626057897,"results":"72","hashOfConfig":"65"},{"size":1350,"mtime":1697635096946,"results":"73","hashOfConfig":"65"},{"size":501,"mtime":1704206469732,"results":"74","hashOfConfig":"65"},{"size":5072,"mtime":1698920120656,"results":"75","hashOfConfig":"65"},{"size":1651,"mtime":1704099200382,"results":"76","hashOfConfig":"65"},{"size":921,"mtime":1704283177305,"results":"77","hashOfConfig":"65"},{"size":621,"mtime":1694087352650,"results":"78","hashOfConfig":"65"},{"size":284,"mtime":1698845758136,"results":"79","hashOfConfig":"65"},{"size":1902,"mtime":1693560905949,"results":"80","hashOfConfig":"65"},{"size":755,"mtime":1690974470155,"results":"81","hashOfConfig":"65"},{"size":2792,"mtime":1703504209073,"results":"82","hashOfConfig":"65"},{"size":1970,"mtime":1704377029791,"results":"83","hashOfConfig":"65"},{"size":3052,"mtime":1693999973850,"results":"84","hashOfConfig":"65"},{"size":2116,"mtime":1694003874614,"results":"85","hashOfConfig":"65"},{"size":5180,"mtime":1698845541716,"results":"86","hashOfConfig":"65"},{"size":1421,"mtime":1699368178960,"results":"87","hashOfConfig":"65"},{"size":1207,"mtime":1694096669740,"results":"88","hashOfConfig":"65"},{"size":1323,"mtime":1698391576007,"results":"89","hashOfConfig":"65"},{"size":2848,"mtime":1704369953869,"results":"90","hashOfConfig":"65"},{"size":2826,"mtime":1699540039033,"results":"91","hashOfConfig":"65"},{"size":1280,"mtime":1704281625491,"results":"92","hashOfConfig":"65"},{"size":5234,"mtime":1704021153672,"results":"93","hashOfConfig":"65"},{"size":4762,"mtime":1704281689019,"results":"94","hashOfConfig":"65"},{"size":3628,"mtime":1704358863212,"results":"95","hashOfConfig":"65"},{"size":2706,"mtime":1699540340926,"results":"96","hashOfConfig":"65"},{"size":1175,"mtime":1704098397006,"results":"97","hashOfConfig":"65"},{"size":716,"mtime":1704098286968,"results":"98","hashOfConfig":"65"},{"size":637,"mtime":1695982307043,"results":"99","hashOfConfig":"65"},{"size":665,"mtime":1695972811160,"results":"100","hashOfConfig":"65"},{"size":1658,"mtime":1704377162407,"results":"101","hashOfConfig":"65"},{"size":250,"mtime":1699540534482,"results":"102","hashOfConfig":"65"},{"size":1967,"mtime":1704447023784,"results":"103","hashOfConfig":"65"},{"size":465,"mtime":1695303469216,"results":"104","hashOfConfig":"65"},{"size":635,"mtime":1699540250290,"results":"105","hashOfConfig":"65"},{"size":703,"mtime":1695734565432,"results":"106","hashOfConfig":"65"},{"size":3723,"mtime":1696341058828,"results":"107","hashOfConfig":"65"},{"size":356,"mtime":1695910655302,"results":"108","hashOfConfig":"65"},{"size":469,"mtime":1695972556712,"results":"109","hashOfConfig":"65"},{"size":2460,"mtime":1698402783715,"results":"110","hashOfConfig":"65"},{"size":526,"mtime":1704207853358,"results":"111","hashOfConfig":"65"},{"size":5716,"mtime":1699607458324,"results":"112","hashOfConfig":"65"},{"size":4813,"mtime":1699608600343,"results":"113","hashOfConfig":"65"},{"size":3450,"mtime":1704210614493,"results":"114","hashOfConfig":"65"},{"size":2868,"mtime":1704367885855,"results":"115","hashOfConfig":"65"},{"size":1305,"mtime":1704098905447,"results":"116","hashOfConfig":"65"},{"size":990,"mtime":1704099114569,"results":"117","hashOfConfig":"65"},{"size":10488,"mtime":1704100502919,"results":"118","hashOfConfig":"65"},{"size":5086,"mtime":1704383076590,"results":"119","hashOfConfig":"65"},{"size":3864,"mtime":1704108892032,"results":"120","hashOfConfig":"65"},{"size":1842,"mtime":1704449598331,"results":"121","hashOfConfig":"65"},{"size":2443,"mtime":1704109513483,"results":"122","hashOfConfig":"65"},{"size":11187,"mtime":1704455608651,"results":"123","hashOfConfig":"65"},{"size":1164,"mtime":1704205584733,"results":"124","hashOfConfig":"65"},{"size":9028,"mtime":1704206475853,"results":"125","hashOfConfig":"65"},{"size":19130,"mtime":1704207756445,"results":"126","hashOfConfig":"65"},{"size":12871,"mtime":1704211344415,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"3m63yd",{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"131"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\index.tsx",[],[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\app\\App.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\store\\index.ts",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\Home\\Home.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\Catalog\\Catalog.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\ProductPage\\ProductPage.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\OrderPage\\OrderPage.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\PaySuccess\\PaySuccess.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\PayWrong\\PayWrong.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\DeliveryPage\\DeliveryPage.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\AboutUsPage\\AboutUs.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\ContactsPage\\ContactsPage.tsx",["337"],[],"import TopHeader from '../../widgets/TopHeader/TopHeader';\r\nimport Footer from '../../widgets/Footer/index.tsx';\r\nimport background from '../../img/contacts-background.png';\r\nimport backgroundMobile from '../../img/contacts-mobile-background.png';\r\nimport styles from './styles/contactPage.module.scss';\r\nimport ContactsAdOptions from '../../widgets/ContactsAdOptions/ContactsAdOptions';\r\nimport ContactsSendBlock from '../../widgets/ContactsSendBlock/ContactsSendBlock';\r\n\r\nconst ContactsPage = () => {\r\n    return (\r\n        <div className={styles.block}>\r\n            <TopHeader />\r\n            <img className={styles.background} src={document.body.clientWidth > 800 ? background : backgroundMobile} alt=\"background\" />\r\n\r\n            <div className={styles.wrapper}>\r\n                <span className={styles.navLink}><a href='/'>Главная </a> / <a href='/contacts'>контакты</a></span>\r\n                <h2 className={styles.mainTtl}>контакты</h2>\r\n\r\n                <ContactsAdOptions />\r\n                <ContactsSendBlock />\r\n\r\n                <h2 className={styles.mapTtl}>Мы на карте</h2>\r\n                <iframe className={styles.map} src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2349.351187614965!2d27.509104182623993!3d53.92550442900918!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x46dbc56c6ea920cb%3A0x8c0a1b9140de5cd8!2sTeachMeSkills!5e0!3m2!1sru!2sfr!4v1698740900591!5m2!1sru!2sfr\" allowFullScreen loading=\"lazy\" referrerPolicy=\"no-referrer-when-downgrade\"></iframe>\r\n            </div>\r\n            \r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactsPage;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\FAQPage\\FAQPage.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Medias\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\shared\\Logo\\Logo.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CatalogAbout\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\DescriptionBlock\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\PopularFlowers\\index.tsx",[],[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\SliderCart\\index.tsx",["338","339"],[],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addProduct } from '../../redux/slices/Busket.js';\r\nimport store from '../../redux/store';\r\nimport styles from './styles/slidercart.module.scss';\r\n\r\ntype CartType = {\r\n    id: number,\r\n    img: string,\r\n    ttl: string,\r\n    cost: string,\r\n}\r\n\r\nconst Index = ({id, img, ttl, cost}: CartType) => {\r\n    const dispatch = useDispatch();\r\n\r\n    function updateStore(event: React.MouseEvent<HTMLButtonElement>) {\r\n        const productInformData = { id, cost, ttl, count: 1 }\r\n\r\n        if (!event.currentTarget.classList.contains('btnDisabled')) {\r\n            event.currentTarget.classList.add('btnDisabled')\r\n\r\n            localStorage.BusketInform = JSON.stringify(JSON.parse(localStorage.BusketInform).concat(productInformData));\r\n            dispatch(addProduct(productInformData));\r\n        }\r\n    }\r\n\r\n    const [disabled, setDisabled] = React.useState(false)\r\n\r\n    store.subscribe(() => {\r\n        if (store.getState().basket.value.some((obj: any) => obj.id === id)) {\r\n            setDisabled(true)\r\n        } else {\r\n            setDisabled(false)\r\n        }\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        if (JSON.parse(localStorage.BusketInform).some((obj: any) => obj.id === id)) {\r\n            setDisabled(true)\r\n        } else {\r\n            setDisabled(false)\r\n        }\r\n        window.addEventListener('storage', () => {\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.block} id={`${id}`}>\r\n            <a href={`/catalog/:${id}`}>\r\n                <img className={styles.img} src={img} alt=\"img\" />\r\n                <h2 className={styles.ttl}>{ttl}</h2>\r\n                <h2 className={styles.cost}>{cost}</h2>\r\n            </a>    \r\n            <button className={`whiteBtn ${disabled && 'btnDisabled'}`} onClick={updateStore}>В корзину</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HowMakeOrder\\HowMakeOrder.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\SpecialOccassion\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Footer\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HaveQuestions\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\InstaBlock\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Busket.js",["340"],[],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { useEffect } from 'react';\r\n\r\nconst BusketSlice = createSlice({\r\n    name: 'Busket',\r\n    initialState: {\r\n        value: [],\r\n    },\r\n    reducers: {\r\n        updateStore(state, store) {\r\n            state.value = store.payload;\r\n        },\r\n        addProduct(state, obj) {\r\n            state.value.push(obj.payload);\r\n        },\r\n        removeProduct (state, id) {\r\n            state.value = state.value.filter(product => product.id !== id.payload)\r\n        },\r\n        countPlus (state, id) {\r\n            state.value = state.value.map(product => {\r\n                if (product.id !== id.payload) {\r\n                    return product;\r\n                } else {\r\n                    product.count++;\r\n                    return product;\r\n                }\r\n            })\r\n        },\r\n        countMinus (state, id) {\r\n            state.value = state.value.map(product => {\r\n                if (product.id !== id.payload) {\r\n                    return product;\r\n                } else {\r\n                    product.count--;\r\n                    return product;\r\n                }\r\n            })\r\n        }\r\n    },\r\n})\r\n\r\nexport const { updateStore, addProduct, removeProduct, countPlus, countMinus} = BusketSlice.actions\r\n\r\nexport default BusketSlice.reducer;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Basket\\index.tsx",["341"],[],"import React from 'react';\r\nimport ProductSnippet from '../../entities/ProductSnippet/ProductSnippet';\r\nimport styles from './styles/basket.module.scss';\r\nimport busketImg from '../../img/busket.svg';\r\nimport close from '../../img/busket-close.png';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateStore } from '../../redux/slices/Busket.js';\r\n\r\ntype Product = {\r\n    id: number,\r\n    cost: number,\r\n    ttl: string,\r\n    count: number,\r\n};\r\n\r\nconst Basket = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    let addedPeoducts = useSelector((state: any) => state.basket.value);\r\n    const productCount = addedPeoducts.reduce((amount: number, obj: Product) => {return amount + obj.count}, 0);\r\n    const productAmount = addedPeoducts.reduce((amount: number, obj: Product) => {return amount + (obj.count * obj.cost)}, 0);\r\n\r\n    // updating the store after a reload\r\n    React.useEffect(() => {\r\n        dispatch(updateStore(JSON.parse(localStorage.BusketInform)));\r\n        addedPeoducts = JSON.parse(localStorage.BusketInform);\r\n    }, []);\r\n\r\n    // toggle busket block\r\n    const [busketOpened, setBusketOpened] = React.useState(false);\r\n\r\n    function toggleBusket() {\r\n        setBusketOpened(!busketOpened);\r\n    };\r\n    \r\n    return (\r\n        <div className={styles.block}>\r\n            <div className={styles.container} onClick={toggleBusket}>\r\n                <img src={busketImg} alt=\"busketImg\" />\r\n                <div className={`${styles.counter} ${productCount < 1 && styles.unvisible}`}>{productCount}</div>\r\n            </div>\r\n            <div className={`${styles.busketAside} ${busketOpened && styles.busketOpened}`} >\r\n                <div>\r\n                    <h2 className={styles.asideTtl}>Ваша корзина <img className={styles.closeBtn} src={close} alt=\"close\" onClick={toggleBusket}/></h2>\r\n                    <div className={busketOpened && styles.blackBackround}></div>\r\n                    <div className={styles.products}>\r\n                        {addedPeoducts.map((obj: Product) => {\r\n                            return <ProductSnippet id={obj.id} ttl={obj.ttl} cost={obj.cost} count={obj.count} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p className={styles.asideParagraph}>\r\n                        <span className={styles.green}>Предварительный итог: {productAmount} руб.</span> <br />\r\n                        Чтобы узнать стоимость доставки, перейдите к оформлению заказа.\r\n                    </p>\r\n                    <a href=\"/order\"><button className={styles.btn}>Оформить заказ</button></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Basket;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\OrderCall\\index.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\HeroSection\\HeroSection.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\Header\\index.tsx",["342","343","344","345"],[],"import React from 'react';\r\nimport styles from './style/Header.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../../shared/Logo/Logo';\r\nimport Medias from '../../widgets/Medias/index.tsx';\r\nimport Busket from '../../features/Basket/index.tsx';\r\n\r\nimport burgerTrigger from '../../img/burger.svg';\r\nimport cross from '../../img/cross.svg';\r\nimport Search from '../../features/Search/Search';\r\n\r\nconst Index = () => {\r\n    const [disabled, setDisabled] = React.useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        setDisabled(!disabled)\r\n    }\r\n    return (\r\n        <header className={`${styles.header} flex justify-between items-start `}>\r\n            {document.body.clientWidth > 800 &&\r\n                <Link to='/'><Logo /></Link>\r\n            }\r\n\r\n            <div className={styles.mobileNav}>\r\n                <img className={styles.trigger} src={burgerTrigger} alt=\"burgerTrigger\" onClick={toggleMenu}/>\r\n                <div className={`${styles.mobileBlock} ${disabled && styles.mobileBlockActive}`}>\r\n                    <img className={styles.cross} src={cross} alt=\"cross\" onClick={toggleMenu}/>\r\n                    \r\n                    <Link to='/'><Logo /></Link>\r\n                    <nav className={`${styles.mobileList}`}>\r\n                        <ul className={`${styles.navigationList} flex justify-between`}>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/'>Главная</a></li>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='../../pages/Catalog/Catalog.tsx'>Каталог</a></li>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/delivery'>Доставка и оплата</a></li>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/aboutUs'>О нас</a></li>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/contacts'>Контакты</a></li>\r\n                            <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/questions'>FAQ</a></li>\r\n                        </ul>\r\n                    </nav>\r\n\r\n                    <div className={styles.mobileContacts}>\r\n                        <a className='uppercase Oswald400 green' href=\"#!\">zakaz@loverflower.by</a>\r\n                        <h2 className={`${styles.delivery} Oswald300 gray`}>Доставка 24/7 по договоренности с оператором</h2>\r\n                        <h2 className={`${styles.street} Oswald400 green`}>ул. Тимирязева 67</h2>\r\n                        <h2 className={`${styles.time} Oswald300 gray`}>10:00 до 21:00<br/> без выходных</h2>\r\n                        <a className={styles.policy} href=\"\">Политика конфиденциальности</a>\r\n                        <a className={`${styles.policy} Oswald400`} href=\"\">Обработка персональных данных</a>\r\n                        <a className={`${styles.number} Oswald400 green`} href=\"#!\">+375 (29) 113-69-69</a>\r\n                        <Medias />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <nav className={`${styles.nav}`}>\r\n                <ul className={`${styles.navigationList} flex justify-between`}>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/catalog'>Каталог</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/delivery'>Доставка и оплата</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/aboutUs'>О нас</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/contacts'>Контакты</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/questions'>FAQ</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href=''></a> Каталог</li>\r\n                </ul>\r\n            </nav>\r\n\r\n            <Search />\r\n\r\n            <div className={`${styles.contactBlock} `}> \r\n                <a className='uppercase Oswald400 green' href=\"#!\">zakaz@loverflower.by</a>\r\n                <h2 className={`${styles.delivery} Oswald300 gray`}>Доставка 24/7 по договоренности с оператором</h2>\r\n                <h2 className={`${styles.street} Oswald400 green`}>ул. Тимирязева 67</h2>\r\n                <h2 className={`${styles.time} Oswald300 gray`}>10:00 до 21:00<br/> без выходных</h2>\r\n                <Medias />\r\n                <a className={`${styles.number} Oswald400 green`} href=\"#!\">+375 (29) 113-69-69</a>\r\n                <Busket />\r\n            </div> \r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Index;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\TopHeader\\TopHeader.tsx",["346","347","348"],[],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Logo from '../../shared/Logo/Logo';\r\nimport Busket from '../../features/Basket/index.tsx';\r\nimport Medias from '../../widgets/Medias/index.tsx';\r\n\r\nimport text from '../../img/header-text.png';\r\nimport cross from '../../img/cross.svg';\r\nimport burgerTrigger from '../../img/burger.svg';\r\n\r\nimport styles from './style/TopHeader.module.scss';\r\nimport Search from '../../features/Search/Search';\r\n\r\n\r\nconst TopHeader = () => {\r\n    const [disabled, setDisabled] = React.useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        setDisabled(!disabled)\r\n    }\r\n    return (\r\n        <div className={styles.header}>\r\n            {document.body.clientWidth > 800 && <Logo></Logo>}\r\n            {document.body.clientWidth < 800 && \r\n                <div className={styles.mobileNav}>\r\n                    <img className={styles.trigger} src={burgerTrigger} alt=\"burgerTrigger\" onClick={toggleMenu}/>\r\n                    <div className={`${styles.mobileBlock} ${disabled && styles.mobileBlockActive}`}>\r\n                        <img className={styles.cross} src={cross} alt=\"cross\" onClick={toggleMenu}/>\r\n                        \r\n                        <Logo />\r\n                        <nav className={`${styles.mobileList}`}>\r\n                            <ul className={`${styles.navigationList} flex justify-between`}>\r\n                                <Search />\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/'>Главная</a></li>\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/catalog'>Каталог</a></li>\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/delivery'>Доставка и оплата</a></li>\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/aboutUs'>О нас</a></li>\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/contacts'>Контакты</a></li>\r\n                                <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/questions'>FAQ</a></li>\r\n                            </ul>\r\n                        </nav>\r\n\r\n                        <div className={styles.mobileContacts}>\r\n                            <a className='uppercase Oswald400 green' href=\"#!\">zakaz@loverflower.by</a>\r\n                            <h2 className={`${styles.delivery} Oswald300 gray`}>Доставка 24/7 по договоренности с оператором</h2>\r\n                            <h2 className={`${styles.street} Oswald400 green`}>ул. Тимирязева 67</h2>\r\n                            <h2 className={`${styles.time} Oswald300 gray`}>10:00 до 21:00<br/> без выходных</h2>\r\n                            <a className={styles.policy} href=\"\">Политика конфиденциальности</a>\r\n                            <a className={`${styles.policy} Oswald400`} href=\"\">Обработка персональных данных</a>\r\n                            <a className={`${styles.number} Oswald400 green`} href=\"#!\">+375 (29) 113-69-69</a>\r\n                            <Medias />\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            }\r\n            <img className={styles.text} src={text} alt=\"text\" />\r\n            <nav className={`${styles.nav}`}>\r\n                <ul className={`${styles.navigationList} flex justify-between`}>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/catalog'>Каталог</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/delivery'>Доставка и оплата</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/aboutUs'>О нас</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/contacts'>Контакты</a></li>\r\n                    <li className={`${styles.link} text-sm Oswald400 gray uppercase cursor-pointer`}><a href='/questions'>FAQ</a></li>\r\n                </ul>\r\n            </nav>\r\n\r\n            {document.body.clientWidth > 800 && <Search />}\r\n\r\n            <a className={`${styles.number} Oswald400 green`} href=\"#!\">+375 (29) 113-69-69</a>\r\n            <Busket />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopHeader;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Search\\Search.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\TypeOfFlower\\TypeOfFlower.tsx",["349","350"],[],"import React from 'react';\r\nimport styles from './styles/FlowerType.module.scss';\r\nimport getProducts from './api/getRequest.ts';\r\n\r\nimport { pushType, popType } from '../../redux/slices/ProductTypes';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { update } from '../../redux/slices/Products';\r\nimport getCurrentProducts from './api/getRequest.ts';\r\n\r\nconst TypeOfFlower = () => {\r\n    const dispatch = useDispatch();\r\n    const buttons: string[] = [\r\n        'Букеты из гипсофил', 'Букеты из ромашек', 'Букеты из хризантем','Комнатные цветы в горшках','Монобукеты','Сборные букеты','Букет на праздник',\r\n        'Композиции из цветов','Конверты','Открытки','Подарки','Букеты из сухоцветов','Шары','Популярное','Букеты роз','Цветы на похороны','Упаковка подарков',\r\n    ];\r\n\r\n    const types = useSelector((state: any) => state.prodTypes);\r\n    const sortBy = useSelector((state: any) => state.sortby);\r\n    const props = useSelector((state: any) => state.Params);\r\n\r\n    React.useEffect(() => {\r\n        const obj = { types, sortBy, props };\r\n\r\n        try {\r\n            getCurrentProducts(obj)\r\n            .then((res: any) => {\r\n                dispatch(update(res));\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n        };\r\n    }, [types]);\r\n    \r\n    function updateStore(event: React.MouseEvent<HTMLButtonElement>) {\r\n        event?.currentTarget.classList.toggle(styles.active);\r\n        const type = event?.currentTarget.innerText;\r\n        \r\n        if (event?.currentTarget.classList.contains(`${styles.active}`)) {\r\n            dispatch(pushType(type));\r\n        } else {\r\n            dispatch(popType(type));\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={styles.block}>\r\n            <h2 className={styles.ttl}>каталог</h2>\r\n            <h2 className={`${styles.ttl} ${styles.ttlSecond}`}>букетов</h2>\r\n            <p className={styles.paragraph}>\r\n                В нашем магазине самый большой выбор букетов для любых событий:\r\n            </p>\r\n            <div className={styles.topics}>\r\n                {buttons.map(string => {\r\n                    return (\r\n                        <button className={styles.topic} onClick={updateStore}>\r\n                            {string}\r\n                        </button>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypeOfFlower;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CatalogHeroSection\\CatalogHero.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\NotFound\\NotFound.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\TypeOfFlower\\api\\getRequest.ts",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Products.js",[],[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductsList\\ProductsList.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductsList\\api\\api.ts",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortBy\\SortBy.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\ProductTypes.js",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortBy\\api\\api.ts",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\Params.js",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortByProps\\SortByProps.tsx",["351"],[],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pushParam, popParam } from '../../redux/slices/Params';\r\nimport { update } from '../../redux/slices/Products';\r\nimport styles from './styles/SortByProps.module.scss';\r\nimport getCurrentProducts from './api/getProducts.js';\r\n\r\nconst SortByProps = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm()\r\n\r\n    const sendProps = () => {};\r\n\r\n    const filters = [\r\n        {ttl: 'ПО СВЕТУ', name: 'light', variants: ['нежные', 'яркие']},\r\n        {ttl: 'ПО ЦВЕТУ', name: 'cost', variants: ['белый', 'желтый', 'зеленый', 'красный', 'оранжевый', 'розовый', 'синий']},\r\n        {ttl: 'ПО ФОРМАТУ', name: 'format', variants: ['букет', 'в вазе', 'в конверте', 'в корзине', 'в шляпной коробке', 'в ящике']},\r\n        {ttl: 'СТОИМОСТЬ', name: 'Cost', variants: ['нежные', 'нежные']},\r\n        {ttl: 'ПО ЦВЕТКУ', name: 'flowers', variants: ['Альстромерия', 'Астильба', 'Альстромерия', 'Астильба', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Альстромерия', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Астильба', 'Альстромерия']},\r\n    ]\r\n\r\n    // Redux state\r\n    const types = useSelector((state: any) => state.prodTypes);\r\n    const sortBy = useSelector((state: any) => state.sortby);\r\n    const props = useSelector((state: any) => state.Params);\r\n\r\n    React.useEffect(() => {\r\n        const obj = { types, sortBy, props };\r\n\r\n        // Make request\r\n        try {\r\n            getCurrentProducts(obj)\r\n            .then((res: any) => {\r\n                dispatch(update(res));\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }, [props])\r\n    \r\n    const updateParams = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event?.currentTarget.previousElementSibling?.classList.toggle(styles.active);\r\n\r\n        // take targetElem props\r\n        const name = event?.currentTarget.name;\r\n        const inputValue = event?.currentTarget.nextElementSibling?.innerHTML;\r\n        \r\n        // UPD State for Params\r\n        if (event?.currentTarget.previousElementSibling?.classList.contains(styles.active)) {\r\n            dispatch(pushParam({[name]: inputValue}))\r\n        } else {\r\n            dispatch(popParam({[name]: inputValue}))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className={styles.block} onSubmit={handleSubmit(sendProps)}>\r\n        {filters.map(topic => {\r\n            return (\r\n                <div className=\"\">\r\n                    <h2 className={styles.title}>{topic.ttl}</h2>\r\n                    <div className={styles.inputs}>\r\n                        {topic.variants.map((vari) => {\r\n                            return (\r\n                                <label className={styles.label}>\r\n                                    <div className={styles.fakeCheckbox}></div>\r\n                                    <input className={styles.checkbox} type={'checkbox'} {...register(`${topic.name}`, { onChange: updateParams })}/>\r\n                                    <span className={styles.inputText}>{vari}</span>\r\n                                </label>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SortByProps;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\redux\\slices\\SortBy.js",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\SortByProps\\api\\getProducts.js",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\entities\\ProductSnippet\\ProductSnippet.tsx",["352"],[],"import React from 'react';\r\nimport styles from './styles/sroductSnippet.module.scss';\r\nimport img from '../../img/second-product-img.png';\r\nimport { useDispatch } from 'react-redux';\r\nimport { countPlus, countMinus, removeProduct, } from '../../redux/slices/Busket.js';\r\n\r\ntype Product = {\r\n    id: number,\r\n    cost: number,\r\n    count: number,\r\n    ttl: string,\r\n};\r\n\r\nconst ProductSnippet = ({cost, count, ttl, id}: Product) => {\r\n    const dispatch = useDispatch();\r\n    let [choosedCount, setChoosedCount] = React.useState(count);\r\n\r\n    function updateState() {\r\n        const result = JSON.parse(localStorage.BusketInform).filter((obj: Product) => {\r\n            if (id !== obj.id) {\r\n                return obj;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('BusketInform', JSON.stringify(result));\r\n        dispatch(removeProduct(id));\r\n    };\r\n\r\n    function chooseCount(event: React.MouseEvent<HTMLButtonElement>) {\r\n        if (event.currentTarget.innerText === '+') {\r\n            setChoosedCount(choosedCount += 1);\r\n            dispatch(countPlus(id));\r\n        } else if (choosedCount > 1) { \r\n            setChoosedCount(choosedCount -= 1);\r\n            dispatch(countMinus(id));\r\n        };\r\n\r\n        const choosedLocal = JSON.parse(localStorage.BusketInform).map((elem: Product) => {\r\n            if (elem.id === id) {\r\n                elem.count = choosedCount;\r\n            };\r\n            return elem;\r\n        });\r\n\r\n        localStorage.setItem('BusketInform', JSON.stringify(choosedLocal));\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.block}>\r\n            <div className={styles.firstBlock}>\r\n                <img className={styles.img} src={img} alt=\"\" />\r\n                <div>\r\n                    <h2 className={styles.productTtl}>{ttl}</h2>\r\n                    <div className={styles.counter}>\r\n                        <button className={styles.minus} onClick={chooseCount}>–</button>\r\n                        <div className={styles.count}>{count}</div>\r\n                        <button className={styles.plus} onClick={chooseCount}>+</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.costBlokc}>\r\n                <h2 className={styles.cost}>{cost} ₽</h2>\r\n                <h2 className={styles.remove} onClick={updateState}>Удалить</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductSnippet;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\pages\\CorporativeClients\\CorporativeClients.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Rating\\Rating.tsx",[],[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ReviewBlock\\ReviewBlock.tsx",["353"],[],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Rating from '../../features/Rating/Rating';\r\nimport styles from './styles/ReviewBlock.module.scss';\r\n\r\ntype ReviewsForm = {\r\n    id: string,\r\n};\r\n\r\nconst ReviewBlock = ({id}: ReviewsForm) => {\r\n    const {   \r\n        register,\r\n        formState: {errors},\r\n        handleSubmit,\r\n        reset,\r\n    } = useForm({\r\n        mode: 'onBlur',\r\n    });\r\n    const [reviews, setReviews] = React.useState([]);\r\n    let [rating, setRating]= React.useState(1);\r\n\r\n    React.useEffect(() => {\r\n        fetch(`http://localhost:5000/api/reviews/`).then((res: any) => res.json()).then((res: any) => setReviews(res));\r\n    }, []);\r\n\r\n    function sendReview(data: any) {\r\n        data.rating = rating;\r\n        data.ProductId = Number(id?.slice(1));\r\n\r\n        try {\r\n            fetch('http://localhost:5000/api/reviews', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            }).then((res: any) => res.json())\r\n            .then((res: any) => console.log(res));\r\n\r\n            reset()\r\n        } catch (err) {\r\n            console.error(err);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {reviews.some((elem: any) => elem.ProductId === Number(id?.slice(1))) ? reviews.map((elem: any) => {\r\n                if (elem.ProductId === Number(id?.slice(1))) {\r\n                    return (\r\n                        <div key={elem.id}>\r\n                            <h2 className={styles.laps}>\"</h2>\r\n                            <h2 className={styles.review}>{elem.review}</h2>\r\n                            <Rating choosedRating={elem.rating} setRating={setRating}/>\r\n                            <h2 className={styles.name}>{elem.name}</h2>\r\n                        </div>\r\n                    )\r\n                }\r\n            }) : \r\n            <div>\r\n                <h2 className={styles.greensubttl}>Будьте первым, кто оставил отзыв на “Рубиновые искры”</h2>\r\n                <h2 className={styles.subttl}>Ваш адрес email не будет опубликован. Обязательные поля помечены *</h2>\r\n                <br />\r\n            </div>\r\n            }\r\n            <form onSubmit={handleSubmit(sendReview)}>\r\n                \r\n                <h2 className={styles.inputTtl}>Ваш отзыв*</h2>\r\n                <input className={`input ${errors?.review && 'wrongValue'}`} placeholder='Введите комментарий' id='' {...register('review', {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[А-Яа-яЁё\\s]+$/,\r\n                        message: 'Введите ваше имя',\r\n                    }\r\n                })}/>\r\n                {errors?.review && <h2 className='errorMessage'>Введите ваш отзыв</h2>}\r\n                <h2 className={styles.inputTtl}>Имя*</h2>\r\n                <input className={`input ${errors?.name && 'wrongValue'}`} placeholder='Введите ваше имя' id='' {...register('name', {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[А-Яа-яЁё\\s]+$/,\r\n                        message: 'Введите ваше имя',\r\n                    }\r\n                })}/>\r\n                {errors?.name && <h2 className='errorMessage'>Введите ваше имя</h2>}\r\n                <h2 className={styles.inputTtl}>E-mail*</h2>\r\n                <input className={`input ${errors?.mail && 'wrongValue'}`} placeholder='Введите вашу почту' {...register(\"mail\", {\r\n                    required: 'Поле имя є обов\\'язковим',\r\n                    pattern: {\r\n                        value: /^\\S+@\\S+\\.\\S+$/,\r\n                        message: 'Будь ласка, введіть правильний адресу електронної пошти'\r\n                    }\r\n                })}/>\r\n                {errors?.mail && <h2 className='errorMessage'>Введите вашу почту</h2>}\r\n                <Rating choosedRating={undefined} setRating={setRating}/>\r\n                <br />\r\n                <button className='greenBtn'>отправить</button>\r\n\r\n                <h2 className={styles.policy}>Нажимая  на кнопку «Отправить», я даю свое согласие на обработку персональных данных, в соответствии с <span className={styles.pink}>Политикой конфиденциальности</span></h2>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewBlock;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\HaveQuestionForm\\HaveQuestionForm.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CatalogRange\\CatalogRange.tsx",[],[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ContactsAdOptions\\ContactsAdOptions.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ContactsSendBlock\\ContactsSendBlock.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\FAQBlock\\FAQBlock.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductAbout\\ProductAbout.tsx",["354","355"],[],"import React from 'react';\r\nimport styles from './styles/productAbout.module.scss';\r\nimport main from '../../img/main-product-img.png';\r\nimport first from '../../img/first-product-img.png';\r\nimport second from '../../img/second-product-img.png';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProduct } from '../../redux/slices/Busket';\r\nimport { useSelector } from 'react-redux';\r\n\r\ntype Product = {\r\n    id: string;\r\n    cost: number;\r\n    title: string;\r\n    imgs: string[];\r\n    colors: string[];\r\n    light: string;\r\n    format: string;\r\n    flowers: string[];\r\n    description: string;\r\n    categories: string[];\r\n    topics: string[];\r\n    createdAt: string;\r\n    updatedAt: string;\r\n};\r\n\r\nconst ProductAbout = ({id}: {id: string}) => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = React.useState<Product>();\r\n    const [disabled, setDisabled] = React.useState(false);\r\n    let [count, setCount] = React.useState(1);\r\n    const basket = useSelector((state: any) => state.basket.value)\r\n\r\n    React.useEffect(() => {\r\n        fetch(`http://localhost:5000/api/products/getproduct/${id}`).then((res: any) => res.json())\r\n        .then((res: any) => setData(res))\r\n        .then((res: any) => {\r\n            console.log(Number(id.slice(1)));\r\n            \r\n            if (JSON.parse(localStorage.BusketInform).some((obj: any) => obj.id === Number(id.slice(1)))) {\r\n                setDisabled(true)\r\n            } else {\r\n                setDisabled(false)\r\n            }\r\n            console.log(disabled);\r\n        })\r\n    }, []);\r\n\r\n    // React.useEffect(() => {\r\n    //     if (JSON.parse(localStorage.BusketInform).some((obj: any) => obj.id === Number(data?.id?.slice(1)))) {\r\n    //         setDisabled(true)\r\n    //     }\r\n    // }, []);\r\n    \r\n    function addToBusket(event: React.MouseEvent<HTMLButtonElement>) {\r\n        const productInformData = { id: data?.id, cost: data?.cost, ttl: data?.title, count }\r\n\r\n        if (!event.currentTarget.classList.contains('btnDisabled')) {\r\n            event.currentTarget.classList.add('btnDisabled')\r\n\r\n            localStorage.BusketInform = JSON.stringify(JSON.parse(localStorage.BusketInform).concat(productInformData));\r\n            dispatch(addProduct(productInformData));\r\n        }\r\n    };\r\n\r\n    function chooseCount(event: React.MouseEvent<HTMLButtonElement>) {\r\n        if (event.currentTarget.innerText === '+') {\r\n            setCount(count += 1);\r\n        } else if (count > 1) { \r\n            setCount(count -= 1);\r\n        };\r\n    };\r\n    return (\r\n        <div className={styles.productAbout}>\r\n            <div className={styles.galary}>\r\n                <img src={first} alt=\"galary\" />\r\n                <img src={main} alt=\"galary\" />\r\n                <img src={second} alt=\"galary\" />\r\n            </div>\r\n            <div className={styles.description}>\r\n                <a className={styles.goBack} href=\"/catalog\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\r\n                        <path d=\"M10.2713 12.1045L6.5 8.33316L10.2713 4.56183L10.7427 5.03316L7.44267 8.33316L10.7427 11.6332L10.2713 12.1045Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    назад\r\n                </a>\r\n                <h2 className={styles.descriptionTtl}>{data?.title}</h2>\r\n                <h2 className={styles.cost}>{data?.cost} p</h2>\r\n                <p className={styles.structure}>\r\n                    <strong>Состав:</strong> Гвоздика (Диантус), Леукодендрон, Леукоспермум (Нутан), Лотос, Роза\r\n                </p>\r\n                <p className={styles.productDescription}>\r\n                    Завораживающая глубина ваших чувств передана огненными красками этого букета\r\n                </p>\r\n                <p className={styles.category}>\r\n                    <strong>Категории:</strong>  8 марта, Букет на 14 февраля, Букет на праздник, Букеты цветов на День рождения, Композиции из цветов, Композиции из цветов в коробке\r\n                </p>\r\n                <p className={styles.types}>\r\n                    <strong>Метки:</strong> Для начальника, Мужские букеты\r\n                </p>\r\n\r\n                <div className={styles.buyInterface}>\r\n                    <button className={`whiteBtn ${disabled && 'btnDisabled'}`} onClick={addToBusket}>В корзину</button>\r\n\r\n                    <div className={styles.counter}>\r\n                        <button className={styles.minus} onClick={chooseCount}>–</button>\r\n                        <div className={styles.count}>{count}</div>\r\n                        <button className={styles.plus} onClick={chooseCount}>+</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductAbout;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\ProductSwitchOptions\\ProductSwitch.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\Slider\\Slider.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\AdditionalToOrder\\AditionalToOrder.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\OrderForm\\OrderForm.tsx",["356","357"],[],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles/orderForm.module.scss';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nconst OrderForm = () => {\r\n    const {\r\n        control,\r\n        formState: {\r\n            errors\r\n        },\r\n        register,\r\n        handleSubmit,\r\n    } = useForm({\r\n        mode: 'onBlur',\r\n    })\r\n\r\n    const sendProps = () => {};\r\n\r\n    React.useEffect(() => {\r\n        elements.current = Array.from(document.querySelectorAll('.fakeBtn'));\r\n    }, [])\r\n\r\n    const elements = React.useRef([]);\r\n\r\n    function changeRadio(event: any) {\r\n        elements.current.forEach((btn: any) => {\r\n            btn.classList.remove(styles.fakeRadioBorder)\r\n        });\r\n        event.currentTarget.previousElementSibling?.classList.toggle(styles.fakeRadioBorder)\r\n    }\r\n\r\n    function orderFlowers(data: any) {\r\n        data.orderedProducts = localStorage.BusketInform;\r\n\r\n        fetch('http://localhost:5000/api/orders', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }).then((responce: any) => responce.json())\r\n        .then((result: any) => {\r\n            console.log(result);\r\n            \r\n            localStorage.BusketInform = JSON.stringify([]);\r\n            window.location.assign('/paysuccess')\r\n        })\r\n        .catch(() => {\r\n            window.location.assign('/paywrong')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(orderFlowers)}>\r\n        <h2 className={styles.inputTtl}>Ваше имя*</h2>\r\n        <input className={`input ${errors?.name && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"name\", {\r\n            required: 'Поле имя є обов\\'язковим',\r\n            pattern: {\r\n                value: /^[А-Яа-яЁё\\s]+$/,\r\n                message: 'поле имя необходимо заполнить видом Антон'\r\n            }\r\n        })}/>\r\n        {errors?.name && <h2 className='errorMessage'>поле имя необходимо заполнить видом Антон</h2>}\r\n        \r\n        <h2 className={styles.inputTtl}>Ваш телефон*</h2>\r\n        <input className={`input ${errors?.number && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"number\", {\r\n            required: 'Поле имя є обов\\'язковим',\r\n            pattern: {\r\n                value: /^\\+\\d{10}$/,\r\n                message: 'поле имя необходимо заполнить видом +7990000000'\r\n            }\r\n        })}/>\r\n        {errors?.number && <h2 className='errorMessage'>поле имя необходимо заполнить видом +7990000000</h2>}\r\n\r\n        <h2 className={styles.inputTtl}>Ваш e-mail*</h2>\r\n        <input className={`input ${errors?.mail && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"mail\", {\r\n            required: 'Поле имя є обов\\'язковим',\r\n            pattern: {\r\n                value: /^\\S+@\\S+\\.\\S+$/,\r\n                message: 'Будь ласка, введіть правильний адресу електронної пошти'\r\n            }\r\n        })}/>\r\n        {errors?.mail && <h2 className='errorMessage'>Будь ласка, введіть правильний адресу електронної пошти</h2>}\r\n\r\n        <h2 className={styles.inputTtl}>Телефон получателя (необязательно)</h2>\r\n        <input className={`input ${errors?.personNumber && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"personNumber\", {\r\n            required: false,\r\n            pattern: {\r\n                value: /^\\+\\d{10}$/,\r\n                message: 'поле имя необходимо заполнить видом +7990000000'\r\n            }\r\n        })}/>\r\n        {errors?.personNumber && <h2 className='errorMessage'>поле имя необходимо заполнить видом +7990000000</h2>}\r\n\r\n        <h2 className={styles.inputTtl}>Имя получателя (необязательно)</h2>\r\n        <input className={`input ${errors?.personName && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"personName\", {\r\n            required: false,\r\n            pattern: {\r\n                value: /^[А-Яа-яЁё\\s]+$/,\r\n                message: 'поле имя необходимо заполнить видом Антон'\r\n            }\r\n        })}/>\r\n        {errors?.personName && <h2 className='errorMessage'>поле имя необходимо заполнить видом Антон</h2>}\r\n\r\n        <h2 className={styles.inputTtl}>Комментарий к заказу</h2>\r\n        <input className={`input ${errors?.comment && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"comment\", {\r\n            required: false,\r\n            pattern: {\r\n                value: /^[А-Яа-яЁё\\s]+$/,\r\n                message: 'комментарий не должэен быть пустым'\r\n            }\r\n        })}/>\r\n        {errors?.comment && <h2 className='errorMessage'>комментарий не должэен быть пустым</h2>}\r\n        \r\n        <h2 className={styles.orderSubttl}>Доставка</h2>\r\n\r\n        <h2 className={styles.inputTtl}>Город*</h2>\r\n        <input className={`input ${errors?.city && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"city\", {\r\n            required: true,\r\n            pattern: {\r\n                value: /^[А-Яа-яЁё\\s]+$/,\r\n                message: 'комментарий не должэен быть пустым'\r\n            }\r\n        })}/>\r\n        {errors?.city && <h2 className='errorMessage'>введите название города</h2>}\r\n\r\n        <h2 className={styles.inputTtl}>Улица*</h2>\r\n        <input className={`input ${errors?.street && 'wrongValue'}`} placeholder='Введите ваше имя' {...register(\"street\", {\r\n            required: true,\r\n            pattern: {\r\n                value: /^[А-Яа-яЁё\\s]+$/,\r\n                message: 'комментарий не должэен быть пустым'\r\n            }\r\n        })}/>\r\n        {errors?.street && <h2 className='errorMessage'>введите название улицы</h2>}\r\n        \r\n        <div className={styles.deliveryInputs}>\r\n            <label htmlFor=\"\">\r\n                <h2 className={styles.inputTtl}>Корп/стр</h2>\r\n                <input className={styles.deliveryInput} type=\"text\" placeholder='Корп/стр' {...register(\"corp\")}/>\r\n            </label>\r\n            <label htmlFor=\"\">\r\n                <h2 className={styles.inputTtl}>Дом</h2>\r\n                <input className={styles.deliveryInput} type=\"text\" placeholder='Дом' {...register(\"house\")}/>\r\n            </label>\r\n            <label htmlFor=\"\">\r\n                <h2 className={styles.inputTtl}>Кв/офис</h2>\r\n                <input className={styles.deliveryInput} type=\"text\" placeholder='Кв/офис' {...register(\"office\")}/>\r\n            </label>\r\n            <label htmlFor=\"\">\r\n                <h2 className={styles.inputTtl}>Время доставки</h2>\r\n                <input className={styles.deliveryInput} type=\"text\" placeholder='__/__' {...register(\"deliveryTime\")}/>\r\n            </label>\r\n        </div>\r\n\r\n        <div className={styles.paymentVariant}>\r\n            <h2 className={styles.orderSubttl}>Оплата</h2>\r\n            <Controller\r\n                name=\"deliveryType\" // Уникальное имя для радиокнопок\r\n                control={control}\r\n                defaultValue=\"option1\" // Значение по умолчанию\r\n                render={({ field }) => (\r\n                <div>\r\n                     <label className={styles.radioLabel}>\r\n                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                            Банковская карта\r\n                            <input className={styles.paymentRadio} type=\"radio\" value='bank-cart' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                        </label>\r\n                        <label className={styles.radioLabel}>\r\n                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                            Наличными\r\n                            <input className={styles.paymentRadio} type=\"radio\" value='cash' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                        </label>\r\n                        <label className={styles.radioLabel}>\r\n                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                            Apple pay\r\n                            <input className={styles.paymentRadio} type=\"radio\" value='apple-pay' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                        </label>\r\n                        <label className={styles.radioLabel}>\r\n                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                            Google pay\r\n                            <input className={styles.paymentRadio} type=\"radio\" value='google-pay' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                        </label>\r\n                        <label className={styles.radioLabel}>\r\n                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                            Криптовалюта\r\n                            <input className={styles.paymentRadio} type=\"radio\" value='crypto' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                        </label>\r\n                        <label className={styles.radioLabel}>\r\n                            <span className={`${styles.fakeRadio} fakeBtn`}></span>\r\n                            С расчетного счета\r\n                            <input className={styles.paymentRadio} type=\"radio\" value='from-payment-account' {...register(`deliveryType`, { onChange: changeRadio, required: true })}/>\r\n                        </label>\r\n                </div>\r\n                )}\r\n            />\r\n        </div>\r\n\r\n        <h2 className={styles.orderTtl}>Общая сумма заказа</h2>\r\n        <h2 className={styles.inputTtl}>Скидка = 0 ₽</h2>\r\n        <h2 className={styles.inputTtl}>Доставка = 0 ₽</h2>\r\n        <button className='greenBtn'>К оплате</button>\r\n        <h2 className={styles.policy}>Нажимая  на кнопку «Отправить», я даю свое согласие на обработку персональных данных, в соответствии с <span className={styles.pink}>Политикой конфиденциальности</span></h2>\r\n    </form>\r\n    );\r\n};\r\n\r\nOrderForm.propTypes = {\r\n    \r\n};\r\n\r\nexport default OrderForm;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\OrderedProducts\\OrderedProducts.tsx",["358"],[],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateStore } from '../../redux/slices/Busket';\r\nimport ProductSnippet from '../../entities/ProductSnippet/ProductSnippet';\r\nimport styles from './styles/orderedProducts.module.scss';\r\n\r\nconst OrderedProducts = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const products = useSelector((state: any) => state.basket.value);\r\n    const amount = products.reduce((sum: number, obj: any) => sum + obj.cost * obj.count, 0)\r\n\r\n    React.useEffect(() => {\r\n        dispatch(updateStore(JSON.parse(localStorage.BusketInform)));\r\n    }, [])\r\n    \r\n    return (\r\n        <div className={styles.products}>\r\n            <h2 className={styles.orderSubttl}>Ваш заказ:</h2>\r\n            {products.map((product: any) => {\r\n                return (\r\n                    <ProductSnippet id={product.id} cost={product.cost} count={product.count} ttl={product.ttl}/>\r\n                );\r\n            })}\r\n            <h2 className={styles.orderSubttl}>Предварительный итог: {amount} руб.</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderedProducts;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\DeliveryPageMain\\DeliveryMain.tsx",["359"],[],"import styles from './styles/deliveryMain.module.scss';\r\nimport background from '../../img/delivery-page-background.png';\r\nimport backgroundMobile from '../../img/delivery-page-background-mobile.png';\r\nimport warningCharacter from '../../img/delivery-page-background-mobile.png';\r\n\r\nconst DeliveryMain = () => {\r\n    return (\r\n        <div>\r\n            <img className={styles.background} src={document.body.clientWidth > 800 ? background : backgroundMobile} alt=\"\" />\r\n            <div className={`${styles.wrapper} wrapper`}>\r\n                <span className={styles.navLink}><a href='/'>Главная </a> / <a href='/delivery'>доставка и оплката</a></span>\r\n                \r\n                <h2 className={styles.ttl}>доставка</h2>\r\n                <h2 className={styles.secondTtl}>и оплата</h2>\r\n                \r\n                <div className={styles.dearClients}>\r\n                    <span className={styles.warningCharacter}>!</span>\r\n                    <div>\r\n                        <h2 className={styles.pink}>Дорогие клиенты!</h2>\r\n                        <p className={styles.warningParagraph}>\r\n                            Во время пандемии (COVID-19) компания Lover Flower призывает всех меньше контактировать с другими людьми для защиты себя и своих близких. Именно поэтому мы организовали <span className={styles.green}>БЕСКОНТАКТНУЮ ДОСТАВКУ</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <h2 className={styles.additionalTtl}>Способы оплаты:</h2>\r\n                <div className={styles.aditionalOptions}>\r\n                    <div className={styles.option}>\r\n                        <p className={styles.paragraphOption}>\r\n                            БАНКОВСКОЙ КАРТОЙ ПРИ ОФОРМЛЕНИИ ЗАКАЗА ЧЕРЕЗ САЙТ или по ссылке\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.option}>\r\n                        <p className={styles.paragraphOption}>\r\n                            НАЛИЧНЫМИ,  БАНКОВСКОЙ КАРТОЙ ПРИ САМОВЫВОЗЕ или с расчетного счета орагнизации\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.option}>\r\n                        <p className={styles.paragraphOption}>\r\n                            НАЛИЧНЫМИ ПРИ ДОСТАВКЕ КУРЬЕРОМ\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.option}>\r\n                        <p className={styles.paragraphOption}>\r\n                            КРИПТОВАЛЮТОЙ\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <h2 className={styles.seliveryVarTtl}>стоимость доставки:</h2>\r\n                <ul className={styles.deliveryList}>\r\n                    <li className={styles.deliveryListItem}>Бесплатно – при заказе на сумму <span className={styles.green}>от 90 рублей</span></li>\r\n                    <li className={styles.deliveryListItem}>10 рублей – при заказе на сумму <span className={styles.green}>менее 90 рублей</span></li>\r\n                    <li className={styles.deliveryListItem}>\r\n                        Так же вы можете забрать ваш заказ самостоятельно по адресу: <br />\r\n                        <span className={styles.green}>г. Минск, ул. Тимирязева д. 67, комн. 112 ежедневно с 10.00 до 21.00</span>\r\n                    </li>\r\n                </ul>\r\n\r\n                <h2 className={styles.seliveryVarTtl}>Условия доставки:</h2>\r\n                <ul className={styles.deliveryList}>\r\n                    <li className={styles.deliveryListItem}>Доставка осуществляется по городу Минску в пределах МКАД <span className={styles.green}>в любой день</span></li>\r\n                    <li className={styles.deliveryListItem}>Возможность, сроки и стоимость доставки за пределы МКАД, доставки в ночное время, праздники <span className={styles.green}>оговариваются с менеджером</span></li>\r\n                </ul>\r\n\r\n                <div className={styles.additionalBlock}>\r\n                    <h2 className={styles.seliveryVarTtl}>Дополнительно:</h2>\r\n\r\n                    <p className={styles.additionalParagraph}>\r\n                        Доставка иному лицу возможна только в случае оплаты заказа заказчиком. Доставка осуществляется не ранее чем через 2 часа после оплаты заказа, но может быть ранее, \r\n                        если букет есть в наличии либо по договорённости с менеджером.\r\n                    </p>\r\n                    <p className={styles.additionalParagraph}>\r\n                        Время ожидания курьера составляет 15 минут. <br /> В случае если на момент доставки цветов получателя нет либо нет возможности по иным причинам произвести доставку \r\n                        (указан неточный адрес, закрытая входная дверь, контрольно-пропускная система и др.), мы оставляем за собой право по собственному выбору:\r\n                    </p>\r\n\r\n                    <ul className={styles.deliveryList}>\r\n                        <li className={styles.deliveryListItem}>\r\n                            оставить цветы тому, кто открыл дверь;\r\n                        </li>\r\n                        <li className={styles.deliveryListItem}>\r\n                            с заказчиком согласовать повторную доставку, которая дополнительно оплачивается;\r\n                        </li>\r\n                        <li className={styles.deliveryListItem}>\r\n                            отказаться от передачи цветов без возврата денежных средств.\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                    <p className={styles.additionalParagraph}>\r\n                        Если вы либо иной получатель не получили заказ, вам необходимо сообщить об этом менеджеру по телефону <a className={styles.additionalNumber} href='#!'>+375 29 113 69 69.</a>\r\n                    </p>\r\n                    \r\n                    <h2 className={styles.seliveryVarTtl}>Возврат денег:</h2>\r\n                    \r\n                    <p className={styles.additionalParagraph}>\r\n                        При отказе заказчика от заказа в течение двух часов, если заказ ещё не начал готовиться, средства возвращаются в полном объёме. Если же флорист начал подготовку,\r\n                        то заказчик имеет право на возврат 50% стоимости, либо, если ещё не был оплачен, то обязан оплатить 50%.\r\n                    </p>\r\n                    <br />\r\n                    <p className={styles.additionalParagraph}>\r\n                        Цветы надлежащего качества возврату и обмену не подлежат, а если имеются какие-либо недостатки в цветах – возврат производится лишь если эти недостатки не являются\r\n                        природными и естественными изъянами растения. Возврат денежных средств производится незамедлительно на тот счёт, с которого произошла оплата, их же поступление на счёт \r\n                        зависит от платёжной системы.\r\n                    </p>\r\n\r\n                </div>\r\n            \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDeliveryMain.propTypes = {\r\n    \r\n};\r\n\r\nexport default DeliveryMain;","D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\widgets\\CorporativeClientsMain\\CorporativeClientsMain.tsx",[],[],"D:\\Рабочий стол\\redux\\Lover-Flower\\client\\src\\features\\CorporativeClientsForm\\CorporativeClientsForm.tsx",["360"],[],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport styles from './styles/corporativeClientsForm.module.scss';\r\n\r\nconst CorporativeClientsForm = () => {\r\n    const {\r\n        control,\r\n        formState: {\r\n            errors\r\n        },\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n    } = useForm({\r\n        mode: 'onBlur',\r\n    })\r\n\r\n    function sendOrder(data: any) {\r\n        \r\n        fetch('http://localhost:5000/api/corporative-clients', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response: any) => response.json())\r\n        .then((result: any) => console.log(result))\r\n        .catch((err: any) => {\r\n            console.log(err);\r\n        }); \r\n\r\n        reset();\r\n    }\r\n    return (\r\n        <form className={styles.form} onSubmit={handleSubmit(sendOrder)}>\r\n            <div>\r\n                <h2 className={styles.inputTtl}>Наименование организации</h2>\r\n                <label className='label'>\r\n                    <input className={`input ${errors?.organisationName && 'wrongValue'}`} placeholder='Введите наименование вашей организации' {...register(\"organisationName\", {\r\n                        required: true,\r\n                        pattern: {\r\n                            value: /^[А-Яа-яЁё\\s]+$/,\r\n                            message: 'Введите правильно название фирмы'\r\n                        }\r\n                    })}/>\r\n                    {errors?.organisationName && <h2 className='errorMessage'>Введите правильно название фирмы</h2>}\r\n                    {errors?.organisationName && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                <h2 className={styles.inputTtl}>Почтовый адрес</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.mailIndex && 'wrongValue'}`} placeholder='Введите почтовый адрес' {...register(\"mailIndex\", {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^\\d{5}(?:[-\\s]\\d{4})?$/,\r\n                        message: 'Введите правильно название фирмы'\r\n                    }\r\n                })}/>\r\n                {errors?.mailIndex && <h2 className='errorMessage'>Введите правильно почт индекс</h2>}\r\n                {errors?.mailIndex && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>             \r\n                <h2 className={styles.inputTtl}>Контактное лицо</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.contactPerson && 'wrongValue'}`} placeholder='Введите имя контактного лица' {...register(\"contactPerson\", {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[А-Яа-яЁё\\s]+$/,\r\n                        message: 'Введите правильно название фирмы'\r\n                    }\r\n                })}/>\r\n                {errors?.contactPerson && <h2 className='errorMessage'>Введите правильно контактное лицо</h2>}\r\n                {errors?.contactPerson && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                <h2 className={styles.inputTtl}>Контактный номер телефона</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.contactNumber && 'wrongValue'}`} placeholder='+7 (977) 777-77-77' {...register(\"contactNumber\", {\r\n                    required: 'Поле имя є обов\\'язковим',\r\n                    pattern: {\r\n                        value: /^\\+\\d{10}$/,\r\n                        message: 'поле имя необходимо заполнить видом +7990000000'\r\n                    }\r\n                })}/>\r\n                {errors?.contactNumber && <h2 className='errorMessage'>поле имя необходимо заполнить видом +7990000000</h2>}\r\n                {errors?.contactNumber && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                <h2 className={styles.inputTtl}>Стоимость букета сотруднику (если разная – указать)</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.busketAmount && 'wrongValue'}`} placeholder='Укажите стоимость букета сотруднику' {...register(\"busketAmount\", {\r\n                    required: true,\r\n                })}/>\r\n                {errors?.busketAmount && <h2 className='errorMessage'>Введите стоимость</h2>}\r\n                {errors?.busketAmount && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                <h2 className={styles.inputTtl}>Адрес электронной почты</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.emailAdress && 'wrongValue'}`} placeholder='Укажите ваш адрес электронной почты' {...register(\"emailAdress\", {\r\n                    required: 'Поле имя є обов\\'язковим',\r\n                    pattern: {\r\n                        value: /^\\S+@\\S+\\.\\S+$/,\r\n                        message: 'Будь ласка, введіть правильний адресу електронної пошти'\r\n                    }\r\n                })}/>\r\n                {errors?.emailAdress && <h2 className='errorMessage'>Будь ласка, введіть правильний адресу електронної пошти</h2>}\r\n                {errors?.emailAdress && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                {document.body.clientWidth < 800 && <div>\r\n                <h2 className={styles.inputTtl}>Введите УНП</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.YNP && 'wrongValue'}`} placeholder='УНП' {...register(\"YNP\", {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /#\\d{6}/,\r\n                        message: 'Введите правильно название фирмы'\r\n                    }\r\n                })}/>\r\n                {errors?.YNP && <h2 className='errorMessage'>Введите УНП</h2>}\r\n                {errors?.YNP && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                <h2 className={styles.inputTtl}>Расчетный счет</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.currentAccount && 'wrongValue'}`} placeholder='Введите номер расчетного счета' {...register(\"currentAccount\", {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[А-Яа-яЁё\\s]+$/,\r\n                        message: 'Введите правильно название фирмы'\r\n                    }\r\n                })}/>\r\n                {errors?.currentAccount && <h2 className='errorMessage'>Введите pасчетный счет</h2>}\r\n                {errors?.currentAccount && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                <h2 className={styles.inputTtl}>Код банка</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.bankCode && 'wrongValue'}`} placeholder='Код банка' {...register(\"bankCode\", {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[А-Яа-яЁё\\s]+$/,\r\n                        message: 'Введите правильно название фирмы'\r\n                    }\r\n                })}/>\r\n                {errors?.bankCode && <h2 className='errorMessage'>Введите код банка</h2>}\r\n                {errors?.bankCode && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                <h2 className={styles.inputTtl}>Предполагаемое количество заявок в месяц</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.countOfOrders && 'wrongValue'}`} placeholder='Введите предполагаемое количество заявок в месяц' {...register(\"countOfOrders\", {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[А-Яа-яЁё\\s]+$/,\r\n                        message: 'Введите правильно название фирмы'\r\n                    }\r\n                })}/>\r\n                {errors?.countOfOrders && <h2 className='errorMessage'>Введите предполагаемое количество заявок в месяц</h2>}\r\n                {errors?.countOfOrders && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n            </div>}\r\n\r\n                <button className='greenBtn'>отправить</button>\r\n            </div>\r\n\r\n\r\n                {document.body.clientWidth > 800 && <div>\r\n                <h2 className={styles.inputTtl}>Введите УНП</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.YNP && 'wrongValue'}`} placeholder='УНП' {...register(\"YNP\", {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /#\\d{6}/,\r\n                        message: 'Введите правильно название фирмы'\r\n                    }\r\n                })}/>\r\n                {errors?.YNP && <h2 className='errorMessage'>Введите УНП</h2>}\r\n                {errors?.YNP && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                <h2 className={styles.inputTtl}>Расчетный счет</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.currentAccount && 'wrongValue'}`} placeholder='Введите номер расчетного счета' {...register(\"currentAccount\", {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[А-Яа-яЁё\\s]+$/,\r\n                        message: 'Введите правильно название фирмы'\r\n                    }\r\n                })}/>\r\n                {errors?.currentAccount && <h2 className='errorMessage'>Введите pасчетный счет</h2>}\r\n                {errors?.currentAccount && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                <h2 className={styles.inputTtl}>Код банка</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.bankCode && 'wrongValue'}`} placeholder='Код банка' {...register(\"bankCode\", {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[А-Яа-яЁё\\s]+$/,\r\n                        message: 'Введите правильно название фирмы'\r\n                    }\r\n                })}/>\r\n                {errors?.bankCode && <h2 className='errorMessage'>Введите код банка</h2>}\r\n                {errors?.bankCode && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n                <h2 className={styles.inputTtl}>Предполагаемое количество заявок в месяц</h2>\r\n                <label className='label'>\r\n                <input className={`input ${errors?.countOfOrders && 'wrongValue'}`} placeholder='Введите предполагаемое количество заявок в месяц' {...register(\"countOfOrders\", {\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[А-Яа-яЁё\\s]+$/,\r\n                        message: 'Введите правильно название фирмы'\r\n                    }\r\n                })}/>\r\n                {errors?.countOfOrders && <h2 className='errorMessage'>Введите предполагаемое количество заявок в месяц</h2>}\r\n                {errors?.countOfOrders && <h2 className='errorMessage exlamation'>!</h2>}\r\n                </label>\r\n\r\n            </div>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CorporativeClientsForm;",{"ruleId":"361","severity":1,"message":"362","line":23,"column":17,"nodeType":"363","endLine":23,"endColumn":396},{"ruleId":"364","severity":1,"message":"365","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":47,"column":8,"nodeType":"370","endLine":47,"endColumn":10,"suggestions":"371"},{"ruleId":"372","severity":1,"message":"373","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":19},{"ruleId":"368","severity":1,"message":"374","line":26,"column":25,"nodeType":"375","endLine":26,"endColumn":62},{"ruleId":"376","severity":1,"message":"377","line":46,"column":25,"nodeType":"363","endLine":46,"endColumn":62},{"ruleId":"376","severity":1,"message":"377","line":47,"column":25,"nodeType":"363","endLine":47,"endColumn":77},{"ruleId":"378","severity":1,"message":"379","line":61,"column":102,"nodeType":"363","endLine":61,"endColumn":113},{"ruleId":"376","severity":1,"message":"377","line":61,"column":102,"nodeType":"363","endLine":61,"endColumn":113},{"ruleId":"364","severity":1,"message":"365","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":14},{"ruleId":"376","severity":1,"message":"377","line":49,"column":29,"nodeType":"363","endLine":49,"endColumn":66},{"ruleId":"376","severity":1,"message":"377","line":50,"column":29,"nodeType":"363","endLine":50,"endColumn":81},{"ruleId":"364","severity":1,"message":"380","line":3,"column":8,"nodeType":"366","messageId":"367","endLine":3,"endColumn":19},{"ruleId":"368","severity":1,"message":"381","line":32,"column":8,"nodeType":"370","endLine":32,"endColumn":15,"suggestions":"382"},{"ruleId":"368","severity":1,"message":"383","line":44,"column":8,"nodeType":"370","endLine":44,"endColumn":15,"suggestions":"384"},{"ruleId":"385","severity":1,"message":"386","line":19,"column":84,"nodeType":"387","messageId":"388","endLine":19,"endColumn":86},{"ruleId":"385","severity":1,"message":"389","line":48,"column":109,"nodeType":"387","messageId":"388","endLine":48,"endColumn":111},{"ruleId":"364","severity":1,"message":"390","line":31,"column":11,"nodeType":"366","messageId":"367","endLine":31,"endColumn":17},{"ruleId":"368","severity":1,"message":"391","line":46,"column":8,"nodeType":"370","endLine":46,"endColumn":10,"suggestions":"392"},{"ruleId":"364","severity":1,"message":"393","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":17},{"ruleId":"364","severity":1,"message":"394","line":18,"column":11,"nodeType":"366","messageId":"367","endLine":18,"endColumn":20},{"ruleId":"368","severity":1,"message":"395","line":15,"column":8,"nodeType":"370","endLine":15,"endColumn":10,"suggestions":"396"},{"ruleId":"364","severity":1,"message":"397","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":24},{"ruleId":"364","severity":1,"message":"398","line":7,"column":9,"nodeType":"366","messageId":"367","endLine":7,"endColumn":16},"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["399"],"no-unused-vars","'useEffect' is defined but never used.","Assignments to the 'addedPeoducts' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","CallExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'getProducts' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'props', and 'sortBy'. Either include them or remove the dependency array.",["400"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'sortBy', and 'types'. Either include them or remove the dependency array.",["401"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","'basket' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'disabled' and 'id'. Either include them or remove the dependency array.",["402"],"'PropTypes' is defined but never used.","'sendProps' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["403"],"'warningCharacter' is defined but never used.","'control' is assigned a value but never used.",{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"406","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},"Update the dependencies array to be: [id]",{"range":"413","text":"414"},"Update the dependencies array to be: [dispatch, props, sortBy, types]",{"range":"415","text":"416"},{"range":"417","text":"416"},"Update the dependencies array to be: [disabled, id]",{"range":"418","text":"419"},"Update the dependencies array to be: [dispatch]",{"range":"420","text":"421"},[1479,1481],"[id]",[1285,1292],"[dispatch, props, sortBy, types]",[1775,1782],[1563,1565],"[disabled, id]",[627,629],"[dispatch]"]